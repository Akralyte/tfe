<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Cleric</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>AutoAssist</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>assist</name>
					<script>  PrimerSpellCast = false
  
  if AssistSpells == nil then
      AssistSpells = {}
  end
  
  if PrimerSpell == nil then
      PrimerSpell = ""
  end

if string.lower(matches[2]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[2]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[2]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	  
  create_tfe_database()
  
  local mydb = db:get_database("skills")
  local mysql = "select * from abilities where ability like '" .. tostring(matches[3]) .. "%' and level &gt; 0 and character = '" .. gmcp.Char.Score.name .. "' limit 1"
  local results = db:fetch_sql(mydb.abilities, mysql)
  
  if next(results) then
  	for _, row in ipairs(results) do
  		if table.maxn(AssistSpells) == 0 and PrimerSpell == "" then
				PrimerSpell = row.ability
      	send("assist -a " .. row.ability)
      	send("gstatus Assisting with: " .. row.ability)
      else
      	table.insert(AssistSpells, row.ability)
      	send("gstatus Assisting with: " .. PrimerSpell .. " &gt; " .. table.concat( AssistSpells, " &gt; "))
      end
  	end	
  else
  	send("gstatus I don't know the ability: " .. matches[3])
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>"(.*) assist (.*)"</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>assist clear</name>
					<script>if string.lower(matches[2]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[2]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[2]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 

  AssistSpells = {}
  PrimerSpell = ""
  PrimerSpellCast = false
  send("assist -a none")
  send("gstatus Assisting spells cleared.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>"(.*) clear"</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>begin casting queued spells</name>
					<script>if (matches[2] == PrimerSpell and not PrimerSpellCast and table.maxn(AssistSpells) &gt; 0) then
  for keyValue, itemValue in pairs(AssistSpells) do
  	send("cast " .. itemValue)
  end
	PrimerSpellCast = true
end

if matches[2] == PrimerSpell and continuouscasting then
	send("cast " .. PrimerSpell)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You begin casting (.*).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>auto assist</name>
					<script>if (matches[2] == "none") then
	PrimerSpell = ""
else
	PrimerSpell = matches[2]
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You will auto.assist with (.*).$</string>
						<string>^Your auto.assist skill is currently set to: (.*)$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>assist tank following</name>
					<script>if matches[3] == Tank then
	send ("assist " .. Tank)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You (\w+) after (\w+).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>reset primer cast variable</name>
					<script>PrimerSpellCast = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) is DEAD!!$</string>
						<string>^You receive (\d+) experience points.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>assist tank rescuing</name>
					<script>if matches[2] == Tank then
		send("cast " .. PrimerSpell) --Send the Primer Spell
	for keyValue, itemValue in pairs(AssistSpells) do
  	send("cast " .. itemValue) --Send the rest of the queued Spells
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) rescues (\w+)!$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>report assisting spells</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
  
  if table.maxn(AssistSpells) == 0 and PrimerSpell == "" then
  	send("gstatus Assisting with: none")
	elseif table.maxn(AssistSpells) == 0 and PrimerSpell ~= "" then
		send("gstatus Assisting with: " .. PrimerSpell)
  else
  	send("gstatus Assisting with: " .. PrimerSpell .. " &gt; " .. table.concat( AssistSpells, " &gt; "))
  end
	
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group (.*): "(\w+) assist"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>continuous casting</name>
					<script>if string.lower(matches[3]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[3]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[3]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 

	if string.lower(matches[4]) == "on" or string.lower(matches[4]) == "off" then
		if string.lower(matches[4]) == "on" then
			continuouscasting = true
			send("gstatus Continuous casting has been enabled.")
		elseif string.lower(matches[4]) == "off" then
			continuouscasting = false
			send("gstatus Continuous casting has been disabled.")
		end
	else
		send("gstatus Please use 'on' or 'off' for continous casting.")
	end

end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You tell your group(.*): "(.*) cc (.*)"$</string>
						<string>tells the group(.*): "(.*) cc (.*)"$</string>
						<string>tells the group(.*): "(.*) ccast (.*)"$</string>
						<string>^You tell your group(.*): "(.*) ccast (.*)"$</string>
						<string>^You say(.*): "(.*) cc (.*)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>assist hurt</name>
					<script>if string.lower(matches[2]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[2]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[2]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	
  AssistSpells = {}
  PrimerSpell = ""
  PrimerSpellCast = false
  send("assist -a none")
  
  create_tfe_database()
  
  local mydb = db:get_database("skills")
  local mysql = "select * " ..
                "from abilities " ..
                "where ability in ('cause light', 'cause serious', 'cause critical', 'harm', 'slay') "..
                "and level &gt; 0 " ..
                "and character = '" .. gmcp.Char.Score.name .. "' " ..
                "order by case when ability = 'cause light' then 1" ..
                "              when ability = 'cause serious' then 2" ..
                "              when ability = 'cause critical' then 3" ..
                "              when ability = 'harm' then 4 "..
                "              when ability = 'slay' then 5 end DESC " ..
                "limit 1"
  local results = db:fetch_sql(mydb.abilities, mysql)
  echo(mysql)
  display(results)
  if next(results) then
  	for _, row in ipairs(results) do
  		if table.maxn(AssistSpells) == 0 and PrimerSpell == "" then
				PrimerSpell = row.ability
      	send("assist -a " .. row.ability)
      	send("gstatus Assisting with: " .. row.ability)
      else
      	table.insert(AssistSpells, row.ability)
      	send("gstatus Assisting with: " .. PrimerSpell .. " &gt; " .. table.concat( AssistSpells, " &gt; "))
      end
  	end	
  else
  	send("gstatus I don't know the ability: " .. matches[3])
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>"(.*) assisthurt"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>AutoSummon</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Summon on Connect</name>
					<script>local player = matches[2]
AutoSummon = AutoSummon or {}
if AutoSummon[player] ~= nil then
  send("cstatus AutoSummoning "..player)
  send("cast summon "..player)
  AutoSummon[player] = AutoSummon[player] + 1
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Info \|\| (\S+) has connected\.$</string>
						<string>^Info \|\| (\S+) has reconnected\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Summon on not found</name>
					<script>local player = matches[2]
AutoSummon = AutoSummon or {}
if AutoSummon[player] ~= nil then
  if AutoSummon[player] &lt;= 20 then

    send("c summon "..player)
    AutoSummon[player] = AutoSummon[player] + 1
  else
    AutoSummon[player] = nil
    send("cstatus AutoSummon on "..player.." failed after 20 retries.")
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Nothing found matching "(.+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Add/Remove to AutoSummon List</name>
					<script>if string.title(matches[2]) ~= gmcp.Char.Score.name then return end --command not for me

AutoSummon = AutoSummon or {}

if matches[3] == nil then
  local list = ""
  if AutoSummon then
    for name, _ in pairs(AutoSummon) do
      list = list .. "|"..name
    end
  end
  list = string.gsub(string.gsub(list,"|","",1), "|",", ")
  send("cstatus AutoSummon List: "..list)
  return
end

local player = string.title(matches[3])

if player == "Clear" then
  AutoSummon = {}
  send("cstatus AutoSummon list cleared.")
  return
end

if AutoSummon[player] == nil then
  AutoSummon[player] = 0
  send("cstatus "..player.." Added to AutoSummon list.")
else
  AutoSummon[player] = nil
  send("cstatus "..player.." Removed to AutoSummon list.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^.+ ctells \(.+\):(?i) "(\S+) AutoSummon (\S+)"$</string>
						<string>^.+ ctells \(.+\):(?i) "(\S+) AutoSummon"$</string>
						<string>^You tell the clan \(.+\):(?i) "(\S+) AutoSummon (\S+)"$</string>
						<string>^You tell the clan \(.+\):(?i) "(\S+) AutoSummon"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Summon Successful</name>
					<script>local player = matches[2]
AutoSummon = AutoSummon or {}
if AutoSummon[player] ~= nil then
  AutoSummon[player] = nil
  send("cstatus AutoSummon on "..player.." successful. Removing from list.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\S+) slowly materializes\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>MissingReagent</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>missing</name>
					<script>matchestwo = matches[3]
matchesthree = matches[3]
send("gstatus Missing "..matchestwo.." to cast "..matchesthree..". Attempting to load one now.")
if matchestwo == "brown duck feather" then matchestwo = "light.brown.feather" end

if matchestwo == "vial of holy water" then 
  expandAlias("get4 "..matchestwo)
else
  expandAlias("get3 "..matchestwo)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You need (a|an) (.*) to cast (.*).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>CaptureGroupStatus</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>group on death</name>
					<script>myGroupHealing = getMyConfiguration("grouphealing")
if myGroupHealing == "1" and --group healing enabled
   table.keys(gmcp.Char.Fighting)[1] == nil then --not in combat
  send("group")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>is DEAD\!\!$</string>
						<string>"gh"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Group Healing - Post Combat</name>
					<script>myGroupTarget = matches[4]
myGroupCurrentHp = tonumber(matches[6])
myGroupMaximumHp = tonumber(matches[7])

--ONLY FIRE IF CURES AVAILABLE TO BE CAST
if myRemainingCures &gt; 0 and myGroupHealing == "1" then

--HEAL THE GROUP
  if myGroupTarget ~= gmcp.Char.Score.name and myGroupTarget ~= gmcp.Group.leader then
  	
		myPercentOfTotal = myGroupCurrentHp / myGroupMaximumHp * 100.00
  	
    if myDebug == "1" then
      cecho("\n&lt;orange&gt;myGroupCurrentHp= "..tostring(myGroupCurrentHp))
    	cecho("\n&lt;orange&gt;myGroupMaximumHp= "..tostring(myGroupMaximumHp))  
      cecho("\n&lt;orange&gt;myPercentOfTotal= "..tostring(myPercentOfTotal).."%")
      cecho("\n&lt;orange&gt;myGroupHealingPercent= "..tostring(myGroupHealingPercent).."%")
  	end

		if myPercentOfTotal &lt;= myGroupHealingPercent then
			send("h "..myGroupTarget)

  		if myDebug == "1" then
  		  cecho("\n&lt;orange&gt;ONE CURE SENT TO --&gt;&gt; "..myGroupTarget)
      end
      
		end
    
  end
  
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\[(.*)\](\s+)(\w+)(\s+)(\d+)\/(\d+)(\s+)(\d+)\/(\d+)(\s+)(\d+)\/(\d+)(\s+)(\d+)$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>ClericPrep</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>ClericAvail</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>up</name>
						<script>disableScript("prep_until_up_is_called")
disableTrigger("ClericFull")
disableTrigger("ClericAvail")
myHealWithSpell = getMyConfiguration("healwithspell")
myHurtWithSpell = getMyConfiguration("hurtwithspell")

expandAlias("sta")
send("gstatus I was upped in the middle of my prep.")
pfree_stand()
--send("gstatus "..tostring(myRemainingCures).." "..myHealWithSpell.." ready for action.")

--enableTrigger("CaptureGroupStatus")
--enableTrigger("PromptCapture")

--setMyConfiguration("prepavail", "0" , "1")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*) tells the group(.*)\: "(?i)up"$</string>
							<string>^You tell your group(.*)\: "(?i)up"$</string>
							<string>(\w+) (report|reports) group status: "(?i)up"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You have prepared</name>
						<script>--send("pc")

my_prep_function()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have prepared (.*).$</string>
							<string>^You now have \d+ incantations of (.*) prepared.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You need energy points</name>
						<script>disableTrigger("ClericFull")
disableTrigger("ClericAvail")

expandAlias("sta")
send("gstatus I've prepped all that I could.")
send("gstatus "..tostring(myRemainingCures).." "..myHealWithSpell.." ready for action.")

if myHealWithSpell == "heal" then
  send("gstatus I have "..tostring(myRemainingVials).." vials of holy water remaining.")
end

enableTrigger("CaptureGroupStatus")
enableTrigger("PromptCapture")

setMyConfiguration("prepavail", "0" , "1")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You need (\d+) energy points to prepare (.*).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>ClericFull</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>up</name>
						<script>disableTrigger("ClericFull")
disableTrigger("ClericAvail")
myHealWithSpell = getMyConfiguration("healwithspell")
myHurtWithSpell = getMyConfiguration("hurtwithspell")

expandAlias("sta")
send("gstatus I was upped in the middle of my prep.")
send("gstatus "..tostring(myRemainingCures).." "..myHealWithSpell.." ready for action.")

enableTrigger("CaptureGroupStatus")
enableTrigger("PromptCapture")

setMyConfiguration("prepfull", "0" , "1") </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*) tells the group(.*): "(?i)up"$</string>
							<string>^You tell your group(.*): "(?i)up"$</string>
							<string>(\w+) (report|reports) group status: "(?i)up"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>begin prepping</name>
						<script>expandAlias("sta")
expandAlias("prepgear")

send("gstatus Starting prep now. Attempting to prep "..myAvailableCures.." " ..myHealWithSpell.. ".")
--send("pc")
my_prep_function()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are now at maximum energy.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>continue prepping1</name>
						<script>send("gstatus I successfully loaded a vial of holy water. Attempting to continue prepping now.")
--send("pc")
my_prep_function()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You get a vial of holy water from a black silk bag labeled xreg.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>continue prepping2</name>
						<script>--send("pc")
my_prep_function()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have prepared (.*).$</string>
							<string>^You now have (\d+) incantations of (.*) prepared.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You need energy points</name>
						<script>disableTrigger("ClericFull")
disableTrigger("ClericAvail")

expandAlias("sta")
send("gstatus Done prepping. "..tostring(myRemainingCures).." "..myHealWithSpell.." ready for action.")

if myHealWithSpell == "heal" then
  send("gstatus I have "..tostring(myRemainingVials).." vials of holy water remaining.")
end

enableTrigger("CaptureGroupStatus")
enableTrigger("PromptCapture")

setMyConfiguration("prepfull", "0" , "1") </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You need (\d+) energy points to prepare (.*).</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>pfree</name>
					<script>disableScript("prep_until_up_is_called")
disableTrigger("CaptureGroupStatus")
disableTrigger("PromptCapture")
disableTrigger("ClericFull")
enableTrigger("ClericAvail")

if myHealWithSpell == "heal" then
  expandAlias("put4 all.vial.holy.water")
  expandAlias("get4 15*vial.holy.water")
end

send("gstatus Attempting to prep "..tostring(myAvailableCures).." "..myHealWithSpell..".")
send("rest")
expandAlias("prepgear")
--send("pc")

setMyConfiguration("prepavail", "1" , "1") 
my_prep_function()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells the group(.*)\: "(?i)pfree"$</string>
						<string>^You tell your group(.*)\: "(?i)pfree"$</string>
						<string>^(\w+) (reports|report) group status\: "(?i)pfree"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>pfull</name>
					<script>disableScript("prep_until_up_is_called")
disableTrigger("CaptureGroupStatus")
disableTrigger("PromptCapture")

if myEnergy &lt; myMaxEnergy then
  enableTrigger("ClericFull")
  disableTrigger("ClericAvail")
  
  if myHealWithSpell == "heal" then
    expandAlias("put4 all.vial.holy.water")
    expandAlias("get4 15*vial.holy.water")
  end
  
  send("gstatus Prepping full now.")
  expandAlias("sle")
else
  disableTrigger("ClericFull")
  enableTrigger("ClericAvail")
  
  if myHealWithSpell == "heal" then
    expandAlias("put4 all.vial.holy.water")
    expandAlias("get4 15*vial.holy.water")
  end
  
  send("sit")
  expandAlias("prepgear")
  send("gstatus No need for regen. Attempting to prep "..tostring(myAvailableCures).." "..myHealWithSpell..".")
  --send("pc")
  
  setMyConfiguration("prepfull", "1" , "1") 
  my_prep_function()
end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells the group(.*)\: "(?i)pfull"$</string>
						<string>^You tell your group(.*)\: "(?i)pfull"$</string>
						<string>^(\w+) (reports|report) group status\: "(?i)pfull"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>extra preps</name>
					<script>--Assumes you are always holding a holy symbol
--send("pc")
my_prep_function()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>"[BOT] Checking again in 15 seconds."</string>
						<string>checking again in 30 seconds."</string>
						<string>"prepone"</string>
						<string>"\[BOT\] Waiting for split \(\d+\), checking again in (\d+) seconds."</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Standing Pfree</name>
					<script>setMyConfiguration("preppingcure", "0", "1") </script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You now have (\d+) incantations of (.*) prepared.$</string>
						<string>^You have prepared (.*).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Commands</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>acid resist</name>
					<script>oldmatches = matches[5]

expandAlias("put3 slug")
expandAlias("get3 slug")
send("cast resist acid " .. oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(?i)aresist (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(?i)aresist (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>cold resist</name>
					<script>oldmatches = matches[5]

expandAlias("put3 coal")
expandAlias("get3 coal")
send("cast resist cold " .. oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(?i)cresist (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(?i)cresist (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>count</name>
					<script>send("prepare")
send("gstatus " .. gmcp.Char.Score.name.." has "..tostring(myRemainingCures).." "..myHealWithSpell.." remaining and "..tostring(myAvailableCures).." available to prep.")
if myHealWithSpell == "heal" then
  send("gstatus I have "..tostring(myRemainingVials).." vials of holy water remaining.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) (tells|tell) (the|your) group(.*)\: "(?i)count"$</string>
						<string>^(\w+) reports group status\: "(?i)count"$</string>
						<string>^(\w+) report group status\: "(?i)count"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>cure blind</name>
					<script>send("cast cure blind " .. matches[5])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(?i)cb (\w+)"$</string>
						<string>^(.*) (report|reports) (group) status\: "(?i)cb (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>cure disease</name>
					<script>oldmatches = matches[5]

expandAlias("put3 rose")
expandAlias("get3 rose")
send("cast cure disease " .. oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(?i)cd (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(?i)cd (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>cure poison</name>
					<script>send("cast cure poison " .. matches[5])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tell|tells) (your|the) group(.*)\: "(?i)cp (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(?i)cp (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>debug</name>
					<script>if string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(myChar),1,3) then

  if matches[6] == "on" or matches[6] == "true" or matches[6] == "1" then
    setMyConfiguration("debug", "1")
  else
    setMyConfiguration("debug", "0")
  end
  
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(?i)(\w+) debug (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(?i)(\w+) debug (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>failed cure blind</name>
					<script>send("cast cure blind self")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Colors swim briefly before your eyes, but you remain blind.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>failed summoning - consent</name>
					<script>send("cstatus Please have " .. matches[2] .. " consent me and try the summon again.")
send("gstatus Please have " .. matches[2] .. " consent me and try the summon again.")
send("tell " .. matches[2] .. " please consent me and try the summon again.")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Since (\w+) does not automatically consent to your actions, the summoning fails.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>failed summoning - energy</name>
					<script>send("gstatus Not enough energy for summon ("..tostring(gmcp.Char.Vitals.en).." out of "..tostring(gmcp.Char.Vitals.maxen)..").")
send("cstatus Not enough energy for summon ("..tostring(gmcp.Char.Vitals.en).." out of "..tostring(gmcp.Char.Vitals.maxen)..").")

create_tfe_database()
  
local mydb = db:get_database("skills")
local mysql = "select * from abilities where ability like 'summon%' and level &gt; 0 and character = '" .. myChar .. "' limit 1"
local results = db:fetch_sql(mydb.abilities, mysql)

if next(results) then
	for _, row in ipairs(results) do
		     send("gstatus I need "..tostring(125-(5*tonumber(row.level))).." to cast summon.")
      send("cstatus I need "..tostring(125-(5*tonumber(row.level))).." to cast summon.")
	end	
else
	send("gstatus I don't know the ability: summon")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You need (\d+) energy points to cast summon.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>fire resist</name>
					<script>oldmatches = matches[5]

expandAlias("put3 ice-blue")
expandAlias("get3 ice-blue")
send("cast resist fire " .. oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "fresist (\w+)"</string>
						<string>^(\w+) (report|reports) (group) status\: "fresist (\w+)"</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>groupheal on off</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	
  if string.lower(matches[6]) == "on" then
    setMyConfiguration("grouphealing", "1", "1")
    myGroupHealingPercent = tonumber(getMyConfiguration("grouphealingpercent"))

  	send("gstatus "..gmcp.Char.Score.name.." has group healing enabled.")
  	send("gstatus "..gmcp.Char.Score.name.." will heal anyone that drops below "..tostring(myGroupHealingPercent).."% of their health.")

  elseif string.lower(matches[6]) == "off" then
    setMyConfiguration("grouphealing", "0", "1")

  	send("gstatus "..gmcp.Char.Score.name.." has group healing disabled.")

  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(\w+) groupheal (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) groupheal (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>groupheal percentage</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	
  if tonumber(matches[6]) &gt;=0 and tonumber(matches[6]) &lt;=100 then
    setMyConfiguration("grouphealingpercentage", matches[6], "1")
    send("gstatus " .. gmcp.Char.Score.name .." will heal anyone that drops below " .. tostring(matches[6]) ..  "% of their health.")
  else
    send("gstatus Please enter a number between 0 and 100%.")
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) groupheal (\d+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) groupheal (\d+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>heal target</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 

	if string.lower(matches[6]) == "heal" then
		send("h " .. matches[7])
	end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(\w+) (\w+) (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) (\w+) (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>healself</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	setMyConfiguration("selfdamagebeforeheals", matches[6], "1")

	send("gstatus "..gmcp.Char.Score.name.." will cure self after taking more than "..matches[6]..".")

end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) healself (\d+)"$</string>
						<string>^(You) (say)(.*)\: "(\w+) healself (\d+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) healself (\d+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>healtank</name>
					<script>if string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) then 
	setMyConfiguration("tankdamagebeforeheals", matches[6], "1")

	send("gstatus " .. gmcp.Char.Score.name .. " will cure " .. Tank .. " (Tank) after taking more than " .. matches[6] .. ".")

end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) healtank (\d+)"$</string>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) healat (\d+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) healat (\d+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) healtank (\d+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>healtank on off</name>
					<script>if string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) then 
	
  if string.lower(matches[6]) == "on" then
    setMyConfiguration("tankhealing", "1", "1")

  	send("gstatus "..gmcp.Char.Score.name.." has tank healing enabled.")

  elseif string.lower(matches[6]) == "off" then
    setMyConfiguration("tankhealing", "0", "1")

  	send("gstatus "..gmcp.Char.Score.name.." has tank healing disabled.")

  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(\w+) healtank (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) healtank (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>healwith</name>
					<script>if string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) then 

	oldmatches = string.lower(matches[6])

	if IsValidCureSpell(oldmatches) then 
    setMyConfiguration("healwithspell", oldmatches, "1")
		SetAverageCures()

		send("alias *h cast "..oldmatches)
  	send("alias *pc prepare "..oldmatches)
  	send("prepare clear")
  	send("gstatus Cure spell now set to : "..oldmatches..". Aliases updated too.")
	else
		send("gstatus You must enter a valid cure spell - cure light|cure serious|cure critical|heal|restoration|group serious|group critical.")
	end
  
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) healwith (.*)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) healwith (.*)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>healprepto</name>
					<script>if string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) then 

	oldmatches = string.lower(matches[6])

  setMyConfiguration("healprepto", oldmatches)
  
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) healprepto (\d+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) healprepto (\d+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>help</name>
					<script>target = string.lower(matches[6])
command = string.lower(matches[7])

if string.sub(target,1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) and (command == "help" or command == "status") then 
  
	expandAlias("standardhelp")
  expandAlias("standardhelpcaster")
  myChar = gmcp.Char.Score.name
  myCuresSentSelf = getMyConfiguration("curessentself")
  myCuresSentTank = getMyConfiguration("curessenttank")
  myHealWithSpell = getMyConfiguration("healwithspell")
  mySelfDamageBeforeHeals = getMyConfiguration("selfdamagebeforeheals")
  myTankHealing = getMyConfiguration("tankhealing")
  myTankDamageBeforeHeals = getMyConfiguration("tankdamagebeforeheals")
  myGroupHealing = getMyConfiguration("grouphealing")
  myGroupHealingPercent = getMyConfiguration("grouphealingpercent")
  myHealPrepTo = getMyConfiguration("healprepto")
  myHurtPrepTo = getMyConfiguration("hurtprepto")
  
	send("gstatus Cures pending to myself : ( "..myCuresSentSelf.." ) - ["..myChar.." reset] to set to 0")
	send("gstatus Cures pending to tank : ( "..myCuresSentTank.." ) - ["..myChar.." reset] to set to 0")
  send("gstatus Cure spell set to : ( "..myHealWithSpell.." ) - ["..myChar.." healwith &lt;cure spell&gt;]")
  send("gstatus Max cure spells to prep are : ( "..myHealPrepTo.." ) - ["..myChar.." healprepto &lt;number&gt;]")
  if myHealWithSpell == "heal" then
    send("gstatus I have "..tostring(myRemainingVials).." vials of holy water remaining.")
  end
  send("gstatus Will cure *self* after taking more than ( "..mySelfDamageBeforeHeals.." ) damage - ["..myChar.." healself &lt;number&gt;]")
  if myTankHealing == "1" then
  	send("gstatus Tank healing enabled - ["..myChar.." healtank &lt;on|off&gt;]")
  	send("gstatus Will cure *tank* after taking more than ( "..myTankDamageBeforeHeals.." ) damage - ["..myChar.." healtank &lt;number&gt;]")
  else
  	send("gstatus Tank healing disabled - ["..myChar.." healtank &lt;on|off&gt;]")
  end
  if myGroupHealing == "1" then
  	send("gstatus Group healing enabled - ["..myChar.." groupheal &lt;on|off&gt;]")
    send("gstatus Group healing happens *after* the mob we are fighting has died")
  	send("gstatus Will heal anyone that drops below ( "..myGroupHealingPercent.."% ) of their health - ["..myChar.." groupheal &lt;number between 0-100%]")
  else
  	send("gstatus Group healing disabled - ["..myChar.." groupheal &lt;on|off&gt;]")
  end
  send("gstatus Hurt spell set to : ( "..myHurtWithSpell.." ) - ["..myChar.." hurtwith &lt;cure spell&gt;]")
  send("gstatus Max hurt spells to prep are : ( "..myHurtPrepTo.." ) - ["..myChar.." hurtprepto &lt;number&gt;]")
  send("gstatus 'cp &lt;target - someone&gt;' for me to cure poison")
	send("gstatus 'cb &lt;target - someone&gt;' for me to cure blindness")
	send("gstatus 'cd &lt;target - someone&gt;' for me to cure disease")
	send("gstatus 'neut &lt;target - someone&gt;' for me to neutralize (hallucinate, silenced, acidic venom)")
  send("gstatus 'purify &lt;target - someone&gt;' for me to purify (cursed, slowed, confused, slept)")
	send("gstatus 'revit &lt;target - someone&gt;' for me to revitalize")
	send("gstatus 'sanctify &lt;target - item&gt;' for me to sanctify")  
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) (tells|tell) (the|your) group(.*): "(\w+) (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) (status): "(\w+) (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>hurtprepto</name>
					<script>if string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) then 

	oldmatches = string.lower(matches[6])

  setMyConfiguration("hurtprepto", oldmatches)
  
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) hurtprepto (\d+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) hurtprepto (\d+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>hurtwith</name>
					<script>if string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) then 

	oldmatches = string.lower(matches[6])

	if IsValidHurtSpell(oldmatches) then 
    setMyConfiguration("hurtwithspell", oldmatches, "1")
  	send("gstatus Hurt spell now set to : "..oldmatches)
	else
		send("gstatus You must enter a valid hurt spell - cause light|cause serious|cause critical|harm|slay.")
	end
  
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) hurtwith (.*)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) hurtwith (.*)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>insight</name>
					<script>send("cast insight " .. matches[5])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tell|tells) (the|your) group(.*)\: "insight (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "insight (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>load</name>
					<script>oldmatches = matches[5]

expandAlias("get3 "..oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "load (.*)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "load (.*)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>neutralize</name>
					<script>send("cast neutralize "..matches[6])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(neut|neutralize) (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(neut|neutralize) (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>poke for cures</name>
					<script>send("h "..matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) pokes you.$</string>
						<string>^(\w+) sends you staggering with a clumsy poke!$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>purify</name>
					<script>send("cast purify "..matches[5])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "purify (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "purify (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>refill canteens gtell or gstatus - from</name>
					<script>if Tank == gmcp.Char.Score.name or matches[2] == gmcp.Group.leader or matches[2] == "You" then
	fillstring = " from " .. matches[6]
  expandAlias("refillwater")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) (tells|tell) (your|the) group(.*)\: "water (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "water (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>refill canteens</name>
					<script>if Tank == gmcp.Char.Score.name or matches[2] == Tank then
		fillstring = ""
  expandAlias("refillwater")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) (tells|tell) (your|the) group(.*): "water"$</string>
						<string>^(\w+) (report|reports) (group) status: "(?i)water"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>refill canteens say</name>
					<script>fillstring = ""
expandAlias("refillwater")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You say(.*): "(?i)water"$</string>
						<string>^You hiss(.*): "(?i)water"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>reset</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 

	ClearCuresSent()
	send("gstatus Pending cures have been reset back to 0. Please record what was happening so that I can review later.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) reset"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) reset"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>revitalize</name>
					<script>oldmatches = matches[6]

expandAlias("put3 troll.flesh")
expandAlias("get3 troll.fles")
send("cast revitalize "..oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(revit|revite|revitalize) (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(revit|revite|revitalize) (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>shock resist</name>
					<script>oldmatches = matches[5]

expandAlias("put3 graph")
expandAlias("get3 graph")
send("cast resist shock "..oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "sresist (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "sresist (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>summon ctell</name>
					<script>if string.lower(matches[4]) == string.lower(gmcp.Char.Score.name) or 
	 string.sub(string.lower(matches[4]),1,1) == string.sub(string.lower(gmcp.Char.Score.name),1,1) or 
	 string.sub(string.lower(matches[4]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
then 
  --send("cast summon "..matches[2])
  AutoSummoning(matches[2], matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) ctells(.*): "(?i)(.*)summon"$</string>
						<string>^(.*) ctells(.*): "(?i)(.*) summon"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>summon gtell</name>
					<script>if gmcp.Room.Info.area ~= "DRGN Stronghold" then
  send("gstatus Attempting to summon " .. matches[4])
  send("tell " .. matches[4] .. " Attempting to summon you per " .. matches[2] .. ".")
  send("cast summon " .. matches[4])
else
  send("tell "..matches[4].." sorry, I am in a no.summon room atm.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) tells the group(.*)\: "summon (.*)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>summon gstatus</name>
					<script>if gmcp.Room.Info.area ~= "DRGN Stronghold" then
  send("gstatus Attempting to summon " .. matches[3])
  send("tell " .. matches[3] .. " Attempting to summon you per " .. matches[2] .. ".")
  send("cast summon " .. matches[3])
else
  send("tell "..matches[3].." sorry, I am in a no.summon room atm.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) reports group status\: "summon (.*)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>summon gtell other</name>
					<script>send("gstatus Attempting to summon "..matches[2])
send("cast summon "..matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) tells the group(.*)\: "summon"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>up</name>
					<script>expandAlias("sta")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) (tells|tell) (the|your) group(.*): "(?i)up"$</string>
						<string>^You say (.*) "(?i)up"$</string>
						<string>(\w+) (report|reports) group status: "(?i)up"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>failed summoning - beyond</name>
					<script>send("cstatus Summoning failed - "..matches[2].." is beyond my reach, perhaps in a bank or no.summon room?")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>As you cast summon, you sense that (\w+) is beyond your reach.</string>
						<string>You fail to summon them.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>concoct elixir</name>
					<script>send("gstatus I must be holding an empty glass flask in order to concoct elixir.")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You must be holding a glass flask in order to concoct an elixir with it.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>ConfirmCureLanded</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cure Cast Successful</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>1</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\+\+\+ You cast (.*) \+\+\+</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Healed Self</name>
						<script>setMyConfiguration("curessentself", tonumber(getMyConfiguration("curessentself"))-1, "1")
myCuresSentSelf = tonumber(getMyConfiguration("curessentself"))
myHealWithSpell = getMyConfiguration("healwithspell")
send("gstatus "..gmcp.Char.Score.name.." has "..tostring(myRemainingCures).." "..myHealWithSpell.." remaining and "..tostring(myAvailableCures).." available to prep.")
cecho("\n&lt;orange&gt;:::self cures sent to self --&gt;&gt; "..tostring(myCuresSentSelf).." :::")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You are completely healed\.$</string>
							<string>^You were not wounded so were not healed\.$</string>
							<string>^Your wounds feel quite a bit better\.$</string>
							<string>^You are slightly healed\.$</string>
							<string>^Most of your wounds are gone\.$</string>
							<string>^You look quite a bit better\.$</string>
							<string>^You look a little bit better\.$</string>
							<string>^You look quite a bit less injured\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Healed other</name>
						<script>local oldmatches = matches[2]

if oldmatches == myTank then
  setMyConfiguration("curessenttank", tonumber(getMyConfiguration("curessenttank"))-1, "1")
  myCuresSentTank = tonumber(getMyConfiguration("curessenttank"))
  send("gstatus "..gmcp.Char.Score.name.." has "..tostring(myRemainingCures).." "..myHealWithSpell.." remaining and "..tostring(myAvailableCures).." available to prep.")
  cecho("\n&lt;orange&gt;:::heal on --&gt;&gt; "..myTank.." detected:::")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*)'s wounds look quite a bit better\.$</string>
							<string>^(.*) is completely healed\.$</string>
							<string>^(.*) was not wounded so was not healed\.$</string>
							<string>^(.*) is slightly healed\.$</string>
							<string>^Most of (.*)'s wounds disappear\.$</string>
							<string>^(.*) looks quite a bit better\.$</string>
							<string>^(.*) looks a little bit better\.$</string>
							<string>^(.*) looks quite a bit less injured\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>ClericDeath</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>DeathLeechSpells</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>continual light</name>
						<script>--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "continual light"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\ncontinual light releeched")

send ("wear shimmering.ball.mage-light")
send ("wear golden.light")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast continual light +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>bless</name>
						<script>--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "bless"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\nbless releeched")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast bless +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>float</name>
						<script>--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "float"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\nfloat releeched")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast float +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>divine inspiration</name>
						<script>expandAlias("get3 blessed.incense")

--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "divine inspiration"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\ndivine inspiration releeched")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast divine inspiration +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>holy wrath</name>
						<script>--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "holy wrath"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\nholy wrath releeched")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast holy wrath +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>mystic shield</name>
						<script>--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "mystic shield"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\nmystic shield releeched")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast mystic shield +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>haste</name>
						<script>if gmcp.Char.Score.name == "Kalem" then
  expandAlias("put2 giant.rabbit")
else
  expandAlias("put3 giant.rabbit")
end

--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "haste"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\nhaste releeched")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast haste +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>invulnerability</name>
						<script>--DeathLeechSpells.Invulnerability = 1;
--#wait 100;
--DeathLeechCheck;

--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "invulnerability"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\ninvulnerability releeched")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast invulnerability +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>fire shield</name>
						<script>--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "fire shield"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\nfire shield releeched")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast fire shield +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>major prowess</name>
						<script>--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "major prowess"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\nmajor prowess releeched")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast major prowess +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>minor prowess</name>
						<script>--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "minor prowess"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\nminor prowess releeched")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast minor prowess +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>revitalize</name>
						<script>--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "revitalize"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\nrevitalize releeched")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast revitalize +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>sustenance</name>
						<script>--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "sustenance"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\nsustenance releeched")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast sustenance +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>displace</name>
						<script>--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "displace"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\ndisplace releeched")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast displace +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>death</name>
					<script>send("remove golden.ball")
send("remove shimmering.ball")
onDeath()

enableTrigger("DeathLeechSpells")

--BEGIN Set all leeched spells to not leeched
--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})

--Set leeched to "no" for all spells that I leech															
db:set(mydb.deathleech.leeched, "no", db:eq(mydb.deathleech.character, gmcp.Char.Score.name))

--END Set all leeched spells to not leeched

tempTimer(10, [[ send("gstatus Attempting to stand.")
							   send("cstatus Attempting to stand.") 
								 send("stand") ]])
								 
tempTimer(15, [[ send("gstatus Attempting to go north one to death.")
							   send("cstatus Attempting to go north one to death.") 
								 send("north &amp; east") ]])
								 
tempTimer(20, [[ send("gstatus Attempting to have death take me to Medienne.")
							   send("cstatus Attempting to have death take me to Medienne.") 
								 send("get all XCOIN")
                 send("prac slay")
                 send("prac slay")
                 send("prac slay")
                 send("prac slay")
                 send("prac slay")
                 send("prac slay")
                 send("prac slay")
                 send("to death med") 
                 ]])
								 
tempTimer(25, [[ send("gstatus Ok I should be in Medienne at the Crossroads.")
							   send("cstatus Ok I should be in Medienne at the Crossroads.") 
								 send("gstatus Tell me or gtell 'reportpos' to confirm.") ]])
								 
tempTimer(30, [[ send("gstatus Please give me back all gear and have me wear everything before issuing the 'gtell "..gmcp.Char.Score.name.." deathleech' command.")
							   send("cstatus Please give me back all gear and have me wear everything before issuing the 'gtell "..gmcp.Char.Score.name.." deathleech' command.") ]])
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You have been KILLED!!$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>death leech</name>
					<script>if string.lower(matches[3]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[3]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[3]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	
  send("gstatus Attempting to releech now.")
  enableTrigger("DeathLeechSpells")
  
  --Create Database if not exists, otherwise update table schema
  create_tfe_database()
  
  --Load Database to local variable
  local mydb = db:get_database("skills")
  
  local mysql = "select * from deathleech where character = '" .. gmcp.Char.Score.name .. "' and leeched = 'no'"
  local results = db:fetch_sql(mydb.deathleech, mysql)
  
  if next(results) then
  	for _, row in ipairs(results) do
  			if row.spell == "continual light" then
  				expandAlias("get3 twist.wire")
  			end
  			if row.spell == "revitalize" then
  				expandAlias("get3 troll.flesh")
  			end
  			if row.spell == "holy wrath" then
  				expandAlias("get3 vial.oil.sac")
  			end
        if row.spell == "sustenance" then
  				expandAlias("get3 aster")
  			end
        if row.spell == "float" then
  				expandAlias("get3 feather.brown.light")
  			end  	
        if row.spell == "displace" then
  				expandAlias("get3 glass.prism")
  			end 
        if row.spell == "haste" then
  				expandAlias("get3 giant.rabbit")
  			end 
        if row.spell == "fire shield" then
  				expandAlias("get3 sulfur")
  			end
        
  		 	send("cast " .. row.spell)
  	end	
  else
  	send("gstatus All spells are releeched already.")
  	disableTrigger("DeathLeechSpells")
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>tells the group(.*)\: "(\w+) (deathleech|deathleach)"$</string>
						<string>^You tell your group(.*)\: "(\w+) (deathleech|deathleach)"$</string>
						<string>^You say(.*)\: "(\w+) (deathleech|deathleach)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>death leech - edit leeched spells</name>
					<script>if string.lower(matches[3]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[3]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[3]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 

 deathleechedit(matches[5])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>tells the group(.*)\: "(\w+) (deathleech|deathleach) (.*)"$</string>
						<string>^You say(.*)\: "(\w+) (deathleech|deathleach) (.*)"$</string>
						<string>^You tell your group(.*)\: "(\w+) (deathleech|deathleach) (.*)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>death leech list</name>
					<script>if string.lower(matches[3]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[3]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[3]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 

  deathleechlist()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>tells the group(.*)\: "(\w+) (deathleechlist|deathleachlist)"$</string>
						<string>^You say(.*)\: "(\w+) (deathleechlist|deathleachlist)"$</string>
						<string>^You tell your group(.*)\: "(\w+) (deathleechlist|deathleachlist)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>death leech clear</name>
					<script>if string.lower(matches[3]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[3]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[3]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 

deathleechclear()

end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>tells the group(.*)\: "(\w+) (deathleechclear|deathleachclear)"$</string>
						<string>^You say(.*)\: "(\w+) (deathleechclear|deathleachclear)"$</string>
						<string>^You tell your group(.*)\: "(\w+) (deathleechclear|deathleachclear)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>FillGroupieWaterContainer</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Container Received</name>
					<script>containerreceived = true
watercontainerowner = matches[2]
send("cast create water "..matches[3])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) gives an empty (.*) to you.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>fill it up</name>
					<script>if containerreceived then
  if matches[4] == "water" then 
    send("give "..matches[3].." to "..watercontainerowner)
    watercontainerowner = ""
    containerreceived = false
  else 
    send("empty "..matches[3].." &amp; cast create water "..matches[3])
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(A|An) (.*) fills to overflowing with (.*).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Grouping</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Join Group</name>
					<script>Tank = gmcp.Group.leader
myChar = gmcp.Char.Score.name
send("opt autoloot 2")
send("cstatus " .. gmcp.Char.Score.name .. " has joined " .. Tank .. "'s group.")
send("gstatus Gstatus '" .. gmcp.Char.Score.name .. " status' to see my commands.")
send("prepare")
ClearCuresSent()

disableTrigger("ClericBots")
disableTrigger("SpamSpells")
disableTrigger("AllBots")
disableTrigger("StableBots")
disableTrigger("SpamMapForRepop")
setMyConfiguration("hpmonitor", "0", "1")
disableTimer("scanner")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You join (.*)'s group.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Disband</name>
					<script>Tank = gmcp.Char.Score.name
myChar = gmcp.Char.Score.name
send("group all")
send("opt autoloot 2")
disableTrigger("ClericBots")
disableTrigger("SpamSpells")
disableTrigger("AllBots")
disableTrigger("StableBots")
disableTrigger("SpamMapForRepop")
disableTimer("scanner")
send("assist -a none")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You disband your group.$</string>
						<string>^You are not currently following anyone.$</string>
						<string>^You already follow yourself.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Stop Following</name>
					<script>send("cstatus " .. gmcp.Char.Score.name .. " has left " .. Tank .. "'s group.")
send("group all")
Tank = gmcp.Char.Score.name
myChar = gmcp.Char.Score.name
send("assist -a none")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You stop following (.*).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>PromptCapture</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>prompt1</name>
					<script>--//This is the prompt I used.

--//?p' -- MORE -- '&lt;%f?f|@R%hhp@n @G%ee@n %Eme @B?m'[%mmv]'!m'%vmv'@n %gwm %lt %Ltm %Hmhp %xxp?l' %C' %d?b' %c'&gt;%\

--//Make sure to check Trigger on Newline and Trigger on Prompt. Nothing else should be checked.

--AutoHeal[gmcp.Char.Score.name]["SelfCurrentMana"] = tonumber(matches[3])
--AutoHeal[gmcp.Char.Score.name]["SelfMaximumMana"] = tonumber(matches[4])
--AutoHeal[gmcp.Char.Score.name]["SelfCurrentHp"]   = tonumber(matches[2])
--AutoHeal[gmcp.Char.Score.name]["SelfMaximumHp"]   = tonumber(matches[9])
--AutoHeal[gmcp.Char.Score.name]["SelfDamageTaken"] = tonumber(matches[9]) - tonumber(matches[2])

--AutoHeal[gmcp.Char.Score.name]["TankCurrentHp"]   = tonumber(matches[7])
--AutoHeal[gmcp.Char.Score.name]["TankMaximumHp"]   = tonumber(matches[8])
--AutoHeal[gmcp.Char.Score.name]["TankDamageTaken"] = tonumber(matches[8]) - tonumber(matches[7])
myDebug = getMyConfiguration("debug")

if myDebug == "1" then
  cecho("\n&lt;orange&gt;prompt1 - fired")
end

my_group_function()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^&lt;(\d+)hp (\d+)e (\d+)me (\d+)mv (\d+)wm (\d+)t (\d+)tm (\d+)mhp (.*)&gt;$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>prompt2</name>
					<script>--//This is the prompt I used.

--//?p' -- MORE -- '&lt;%f?f|@R%hhp@n @G%ee@n %Eme @B?m'[%mmv]'!m'%vmv'@n %gwm %lt %Ltm %Hmhp %xxp?l' %C' %d?b' %c'&gt;%\

--//Make sure to check Trigger on Newline and Trigger on Prompt. Nothing else should be checked.


--AutoHeal[gmcp.Char.Score.name]["SelfCurrentMana"] = tonumber(matches[4])
--AutoHeal[gmcp.Char.Score.name]["SelfMaximumMana"] = tonumber(matches[5])
--AutoHeal[gmcp.Char.Score.name]["SelfCurrentHp"]   = tonumber(matches[3])
--AutoHeal[gmcp.Char.Score.name]["SelfMaximumHp"]   = tonumber(matches[10])
--AutoHeal[gmcp.Char.Score.name]["SelfDamageTaken"] = tonumber(matches[10]) - tonumber(matches[3])

--AutoHeal[gmcp.Char.Score.name]["TankCurrentHp"]   = tonumber(matches[8])
--AutoHeal[gmcp.Char.Score.name]["TankMaximumHp"]   = tonumber(matches[9])
--AutoHeal[gmcp.Char.Score.name]["TankDamageTaken"] = tonumber(matches[9]) - tonumber(matches[8])
myDebug = getMyConfiguration("debug")

if myDebug == "1" then
  cecho("\n&lt;orange&gt;prompt2 - fired")
end

my_group_function()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^&lt;(\w+)\|(\d+)hp (\d+)e (\d+)me (\d+)mv (\d+)wm (\d+)t (\d+)tm (\d+)mhp (.*)&gt;$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>SpamSpells</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Spam Create Food</name>
					<script>if Tank == gmcp.Char.Score.name then
	tempTimer( 60, [[send("eat food &amp; drop food &amp; cast create food")]] )
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast create food +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Create Food Hit 10</name>
					<script>disableTrigger("Spam Create Food")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>create food just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Create Light</name>
					<script>send("drop ball.light")
if Tank == gmcp.Char.Score.name then
	tempTimer( 60, [[send("cast create light")]] )
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast create light +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Create Light Hit 10</name>
					<script>disableTrigger("Create Light")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>create light just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Armor Recast</name>
					<script>send("leech armor")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast armor +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Armor Faded</name>
					<script>expandAlias("put3 beetle")
expandAlias("get3 beetle")
send("cast armor")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You feel less protected.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Armor Hit 10</name>
					<script>disableTrigger("Armor Recast")
disableTrigger("Armor Faded")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>armor just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bless Recast</name>
					<script>send("remove cameo")
send("leech bless")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast bless +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bless Faded</name>
					<script>send("cast bless")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You feel less righteous.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bless Hit 10</name>
					<script>disableTrigger("Bless Recast")
disableTrigger("Bless Faded")
send("wear cameo")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>bless just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Create Water</name>
					<script>send("empty vial.glass")
--if Tank == gmcp.Char.Score.name then
	tempTimer( 60, [[send("cast create water vial.glass")]] )
--end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast create water +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Create Water Hit 10</name>
					<script>disableTrigger("Create Water")
expandAlias("load")
send("empty vial, put empty.vial swag")
expandAlias("unload")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>create water just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Holy Wrath Recast</name>
					<script>send("leech holy wrath")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast holy wrath +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Holy Wrath Faded</name>
					<script>send("cast holy wrath")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your wrath subsides.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Holy Wrath Hit 10</name>
					<script>disableTrigger("Holy Wrath Recast")
disableTrigger("Holy Wrath Faded")
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>holy wrath just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cure Poison</name>
					<script>send("remove black.rose &amp; wear etter,owl")
if Tank == gmcp.Char.Score.name then
	tempTimer( 60, [[send("rem etter,owl &amp; wear black.rose &amp; cast cure poison")]] )
else
	send("rem black.rose &amp; wear etter,owl")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast cure poison +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cure Poison Hit 10</name>
					<script>disableTrigger("Cure Poison")
expandAlias("load")
send("put black.rose swag")
expandAlias("unload")
send("wear owl.ett")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>cure poison just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Neutralize</name>
					<script>send("remove black.lotus &amp; wear etter")
if Tank == gmcp.Char.Score.name then
	tempTimer( 60, [[send("rem etter &amp; wear black.lotus &amp; cast neutralize")]] )
else
	send("rem black.lotus &amp; wear etter")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast neutralize +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Neutralize Hit 10</name>
					<script>disableTrigger("Neutralize")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>neutralize just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cure Serious</name>
					<script>tempTimer(60, [[ 
send("pc")
send("remove kilt")
send("wear kilt")
send("h")
]])
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast cure serious +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cure Serious Hit 10</name>
					<script>disableTrigger("Cure Serious")
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>cure serious just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cure Critical</name>
					<script>tempTimer(90, [[ 
--send("remove buckler,shield")
--send("wear unholy.symbol")
send("pc")
--send("remove unholy.symbol")
--send("wear buckler,shield")
send("remove kilt")
send("wear kilt")
send("h")
]])
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast cure critical +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Aura Shield Faded</name>
					<script>send("cast aura shield")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your aura of sanctity disappears entirely.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Aura Shield Recast</name>
					<script>send("leech aura shield")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast aura shield +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Aura Shield Hit 10</name>
					<script>disableTrigger("Aura Shield Faded")
disableTrigger("Aura Shield Recast")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>aura shield just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Minor Prowess Faded</name>
					<script>send("cast minor prowess")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your minor divine prowess subsides.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Minor Prowess Recast</name>
					<script>send("leech minor prowess")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast minor prowess +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>invulnerability recast</name>
					<script>send("leech invul")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast invulnerability +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>invulnerability faded</name>
					<script>send("cast invulnerability")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You feel more vulnerable to injury.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>divine inspiration recast</name>
					<script>send("leech divine inspiration")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast divine inspiration +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>divine inspiration faded</name>
					<script>send("cast divine inspiration")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are no longer inspired by divine forces.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>divine inspiration Hit 10</name>
					<script>disableTrigger("divine inspiration recast")
disableTrigger("divine inspiration faded")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are no longer inspired by divine forces.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>detect law recast</name>
					<script>send("leech detect law")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast detect law +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>detect law faded</name>
					<script>send("cast detect law")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You can no longer detect lawfulness.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>detect chaos faded</name>
					<script>send("cast detect chaos")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You can no longer detect chaos.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>detect chaos recast</name>
					<script>send("leech detect chaos")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast detect chaos +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>detect evil faded</name>
					<script>send("cast detect evil")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You can no longer detect evil</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>detect evil recast</name>
					<script>send("leech detect evil")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast detect evil +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>protection chaos recast</name>
					<script>send("leech prot vs chaos")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast protection/chaos +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>protection chaos faded</name>
					<script>send("cast protection/chaos")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>The perfect crystalline sphere surrounding you disappears.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>insight cast</name>
					<script>send("leech insight")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ you cast insight +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>ShieldVendor</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bless</name>
					<script>send("stand")
send("cast bless " .. matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "blessme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Create Food</name>
					<script>send("stand")	
send("cast create feast")
send("cast create feast")
send("cast create feast")
send("cast create feast")
send("cast create feast")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "feedme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Holy Wrath</name>
					<script>--If you want to be using the matches table after calling expandAlias, 
--you should save it first as local oldmatches = matches before calling 
--expandAlias, since expandAlias will overwrite it after using it again.
local oldmatches = matches[2]

send("stand")
expandAlias("put3 vial.sac.oil")
expandAlias("get3 vial.sac.oil")
send("cast holy wrath " .. oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "wrathme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Continual Light</name>
					<script>--If you want to be using the matches table after calling expandAlias, 
--you should save it first as local oldmatches = matches before calling 
--expandAlias, since expandAlias will overwrite it after using it again.
local oldmatches = matches[2]

send("stand")
expandAlias("put3 twist.wire")
expandAlias("get3 twist.wire")
send("cast continual light " .. oldmatches)
send("cast create light")
send("give ball.light " .. oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "lightme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Summon</name>
					<script>if gmcp.Room.Info.area ~= "DRGN Stronghold" then
  send("cstatus [ALERT] " .. matches[2] .. " has requested a summon, casting right meow." )
  send("stand")
  send("tell " .. matches[2] .. " casting now - please make sure you are not: hiding, camo'ing, darklighting, or darknessing")
  send("cast summon " .. matches[2])
else
  send("tell " .. matches[2] .. " sorry, I am in a no.summon room atm.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "summonme"$</string>
						<string>^(.*) tells you: "summon"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>List of Commands</name>
					<script>send("tell " .. matches[2] .. " Make sure we are both intro'd to each other.")
send("tell " .. matches[2] .. " Make sure we are both in the same room.")
send("tell " .. matches[2] .. " Tell me 'armorme' for me to leech armor.")
send("tell " .. matches[2] .. " Tell me 'aurame' for me to leech aura shield.")
send("tell " .. matches[2] .. " Tell me 'blessme' for me to leech bless.")
send("tell " .. matches[2] .. " Tell me 'wrathme' for me to leech holy wrath.")
send("tell " .. matches[2] .. " Tell me 'consecrateme &lt;item&gt;' for me to cast consecrate - may need to hand me a beak.")
send("tell " .. matches[2] .. " Make sure you hand me your item first. After casting, I will hand it back.")
send("tell " .. matches[2] .. " Tell me 'cpme' for cast cure poison on you.")
send("tell " .. matches[2] .. " Tell me 'cbme' for cast cure blindness on you.")
send("tell " .. matches[2] .. " Tell me 'cdme' for cast cure disease on you.")
send("tell " .. matches[2] .. " Tell me 'feedme' for me to create some food for you.")
send("tell " .. matches[2] .. " Tell me 'glorifyme &lt;weapon&gt;' for me to cast glorify weapon - may need to hand me some sacramental oil.")
send("tell " .. matches[2] .. " Make sure you hand me your weapon first. After casting, I will hand it back.")
send("tell " .. matches[2] .. " Tell me 'insightme' for me to leech insight.")
send("tell " .. matches[2] .. " Tell me 'lightme' for me to leech continual light.")
send("tell " .. matches[2] .. " Tell me 'remcurseme' for cast remove curse on you.")
send("tell " .. matches[2] .. " Tell me 'neuterme' for cast neutralize on you.")
send("tell " .. matches[2] .. " Tell me 'revitme' for cast revitalize on you.")
send("tell " .. matches[2] .. " Tell me 'purifyme' for cast purify on you.")
send("tell " .. matches[2] .. " Tell me 'racid' for leech resist acid - may need to hand me a giant slug skin.")
send("tell " .. matches[2] .. " Tell me 'rcold' for leech resist cold - may need to hand me some coal.")
send("tell " .. matches[2] .. " Tell me 'rfire' for leech resist fire - may need to hand me an ice-blue diamond.")
send("tell " .. matches[2] .. " Tell me 'rshock' for leech resist shock - may need to hand me a graphite rod.")
send("tell " .. matches[2] .. " Tell me 'sanctifyme &lt;item&gt;' for me to cast sanctify - may need to hand me some alum.")
send("tell " .. matches[2] .. " Make sure you hand me your item first. After casting, I will hand it back.")
send("tell " .. matches[2] .. " Tell me 'summonme' or 'summon' to bring you to me.")
send("tell " .. matches[2] .. " Feel free to poke me for cures and I'll cast them if I have them prepped.")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "shields"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cure Poison</name>
					<script>oldmatchestwo = matches[2]
send("stand")  
send("cast cure poison "..oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "cpme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Remove Curse</name>
					<script>oldmatchestwo = matches[2]
send("stand")  
send("cast remove curse "..oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "remcurseme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Purify</name>
					<script>oldmatchestwo = matches[2]
send("stand")  
send("cast purify "..oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "purifyme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cure Blind</name>
					<script>oldmatchestwo = matches[2]
send("stand")
send("cast cure blindness "..oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "cbme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Insight</name>
					<script>--If you want to be using the matches table after calling expandAlias, 
--you should save it first as local oldmatches = matches before calling 
--expandAlias, since expandAlias will overwrite it after using it again.
local oldmatchestwo = matches[2]

send("cte [ALERT] " .. oldmatchestwo .. " has requested an insight, casting right meow." )
send("stand")
send("tell " .. oldmatchestwo .. " casting now - please make sure you are not: hiding, camo'ing, darklighting, or darknessing")
expandAlias("put4 vial.holy.water")
expandAlias("get4 vial.holy.water")
send("cast insight " .. oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "insightme"$</string>
						<string>^(.*) tells you: "insight"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sanctify</name>
					<script>--If you want to be using the matches table after calling expandAlias, 
--you should save it first as local oldmatches = matches before calling 
--expandAlias, since expandAlias will overwrite it after using it again.
local oldmatchesthree = matches[3]
local oldmatchestwo = matches[2]

send("stand")
send("cast sanctify " .. oldmatchesthree)
send("give " .. oldmatchesthree .. " " .. oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "sanctifyme (.*)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cure Disease</name>
					<script>oldmatchestwo = matches[2]
send("stand")
expandAlias("put3 rose")
expandAlias("get3 rose")
send("cast cure disease " .. oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "cdme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Neutralize</name>
					<script>oldmatchestwo = matches[2]
send("stand")
send("cast cure neutralize " .. oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "neuterme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Aura Shield</name>
					<script>oldmatchestwo = matches[2]
send("stand")
expandAlias("put3 bless.cand")
expandAlias("get3 bless.cand")
send("cast aura shield " .. oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "aurame"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Revitalize</name>
					<script>oldmatchestwo = matches[2]
send("stand")
expandAlias("put3 troll.flesh")
expandAlias("get3 troll.flesh")
send("cast revitalize " .. oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "revitme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Armor</name>
					<script>oldmatchestwo = matches[2]
send("stand")
expandAlias("put3 beetle")
expandAlias("get3 beetle")
send("cast armor " .. oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "armorme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Consecrate</name>
					<script>--If you want to be using the matches table after calling expandAlias, 
--you should save it first as local oldmatches = matches before calling 
--expandAlias, since expandAlias will overwrite it after using it again.
local oldmatchesthree = matches[3]
local oldmatchestwo = matches[2]

send("stand")
send("cast consecrate " .. oldmatchesthree)
send("give " .. oldmatchesthree .. " " .. oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "consecrateme (.*)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Resist Cold</name>
					<script>local oldmatches = matches[2]

send("stand")
send("cast resistance cold " .. oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "rcold"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Resist Fire</name>
					<script>local oldmatches = matches[2]

send("stand")
send("cast resistance fire " .. oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "rfire"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Resist Acid</name>
					<script>local oldmatches = matches[2]

send("stand")
send("cast resistance acid " .. oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "racid"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Resist Shock</name>
					<script>local oldmatches = matches[2]

send("stand")
send("cast resistance shock " .. oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "rshock"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Glorify Weapon</name>
					<script>--If you want to be using the matches table after calling expandAlias, 
--you should save it first as local oldmatches = matches before calling 
--expandAlias, since expandAlias will overwrite it after using it again.
local oldmatchesthree = matches[3]
local oldmatchestwo = matches[2]

send("stand")
send("cast glorify weapon " .. oldmatchesthree)
send("give " .. oldmatchesthree .. " " .. oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "glorifyme (.*)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>TrackCures</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>spells forgotten</name>
					<script>ClearCuresSent()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^All prepared spells forgotten.$</string>
						<string>You have no spells prepared.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>not prepared</name>
					<script>myHealWithSpell = getMyConfiguration("healwithspell")

if matches[2] == myHealwithSpell then 
--setMyConfiguration("remainingcures", "0", "1")
send("gstatus I'm OUT!!!")
send("em I'm OUT!!!")
end

if matches[2] == myHurtwithSpell then 
--setMyConfiguration("remaininghurts", "0", "1")
send("gstatus I'm OUT!!!")
send("em I'm OUT!!!")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You don't have (.*) prepared.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>disrupted</name>
					<script>if IsValidCureSpell(matches[2]) then 
  ClearCuresSent()
  send("gstatus [BOT] My cure casting was DISRUPTED. Resetting cure tracking.")
end

if IsValidHurtSpell(matches[2]) then 
  ClearCuresSent()
  send("gstatus [BOT] My hurt casting was DISRUPTED.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\&gt;\&gt; Your (.*) casting is disrupted. \&lt;\&lt;$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>standing helps</name>
					<script>ClearCuresSent()
send("gstatus [BOT] I am not standing. Standing now and resetting cure tracking.")
send("stand")
send("group")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Perhaps you should stand first.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>spells remaining</name>
					<script>myHealWithSpell = getMyConfiguration("healwithspell")
if IsValidCureSpell(matches[3]) then 
  send("gstatus "..gmcp.Char.Score.name.." has "..tostring(myRemainingCures).." "..myHealwithSpell.." remaining and "..tostring(myAvailableCures).." available to prep.")
end

if IsValidHurtSpell(matches[3]) then 
  send("gstatus "..gmcp.Char.Score.name .." has "..tostring(myRemainingHurts).." "..myHurtwithSpell.." remaining and "..tostring(myAvailableHurts).." available to prep.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^/[ You have (\d+) (.*) spell remaining. /]$</string>
						<string>^/[ You have (\d+) (.*) spells remaining. /]$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>drowning</name>
					<script>send("gstatus [BOT] My casting was disrupted due to DROWNING. Gtell swimon for me to wear waterbreathing gear. Resetting cure tracking.")
ClearCuresSent()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You can't cast spells while drowning.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Track Vials of Holy Water</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Remaining Vials of Holy Water</name>
					<script>setMyConfiguration("remainingvials", matches[2], "1")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^A black silk bag labeled XHOLYWATER contains (\d+) (vials|vial) of holy water.$</string>
						<string>^An enchanted black silk bag labeled XHOLYWATER contains (\d+) (vials|vial) of holy water.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>empty</name>
					<script>setMyConfiguration("remainingvials", "0", "1")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>An enchanted black silk bag labeled XHOLYWATER is empty.</string>
						<string>A black silk bag labeled XHOLYWATER is empty.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>one</name>
					<script>setMyConfiguration("remainingvials", "1", "1")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>An enchanted black silk bag labeled XHOLYWATER contains a vial of holy water.</string>
						<string>A black silk bag labeled XHOLYWATER contains a vial of holy water.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You need a vial of holy water to prepare heal.</name>
					<script>send("gstatus missing reagent : vial of holy water")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You need a vial of holy water to prepare heal.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Version9.2</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
		</TriggerGroup>
	</TriggerPackage>
	<TimerPackage>
		<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>Module Subfolder 1</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<time>00:00:00.000</time>
			<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>Module Timer 1</name>
				<script>echo("Module Timer Test\n")</script>
				<command></command>
				<packageName></packageName>
				<time>00:05:00.000</time>
			</Timer>
		</TimerGroup>
	</TimerPackage>
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Module Subfolder 1</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Module Sub Sub folder 1 - 1</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Moldule Alias 1</name>
					<script>feedTriggers("Module Test\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^ModuleAlias$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage>
		<ScriptGroup isActive="no" isFolder="yes">
			<name>gmcpCleric</name>
			<packageName></packageName>
			<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>my_group_function</name>
				<packageName></packageName>
				<script>function my_group_function()

  myDebug = getMyConfiguration("debug")

  if myDebug == "1" then
    cecho("\n&lt;orange&gt;my_group_function() - fired")
  end

  myChar = gmcp.Char.Score.name
  myTank = gmcp.Group.leader
  myEnergy = tonumber(gmcp.Char.Vitals.en)
  myMaxEnergy = tonumber(gmcp.Char.Vitals.maxen)
  myCureEnergyCost = tonumber(getMyConfiguration("cureenergycost"))
  myAvailableCures = tonumber(math.floor(myEnergy / myCureEnergyCost))
  setMyConfiguration("availablecures", myAvailableCures, "1")
  myHealWithSpell = getMyConfiguration("healwithspell")
  myTankHealing = getMyConfiguration("tankhealing")
  myHitPoints = tonumber(gmcp.Char.Vitals.hp)
  myMaxHitPoints = tonumber(gmcp.Char.Vitals.maxhp)
  mySelfDamageTaken = myMaxHitPoints - myHitPoints
  myRemainingVials = tonumber(getMyConfiguration("remainingvials"))
  
  setMyConfiguration("remainingcures", gcmpPrepCount(myHealWithSpell), "1")
  myRemainingCures = tonumber(getMyConfiguration("remainingcures"))
  
  if myRemainingCures == nil or myRemainingCures == 0 then
    myRemainingCures = 0
    if myDebug == "1" then
      cecho("\n&lt;orange&gt;my_group_function() - No cures prepped.")
    end
    return
  end
  
  if myDebug == "1" then
    cecho("\n&lt;orange&gt;my_group_function() - myHealWithSpell= "..tostring(myHealWithSpell))
    cecho("\n&lt;orange&gt;my_group_function() - myEnergy= "..tostring(myEnergy))
    cecho("\n&lt;orange&gt;my_group_function() - myMaxEnergy= "..tostring(myMaxEnergy))
    cecho("\n&lt;orange&gt;my_group_function() - myAvailableCures= "..tostring(myAvailableCures))
    cecho("\n&lt;orange&gt;my_group_function() - myRemainingCures= "..tostring(myRemainingCures))
    cecho("\n&lt;orange&gt;my_group_function() - myHitPoints= "..tostring(myHitPoints))
    cecho("\n&lt;orange&gt;my_group_function() - myMaxHitPoints= "..tostring(myMaxHitPoints))
    cecho("\n&lt;orange&gt;my_group_function() - mySelfDamageTaken= "..tostring(mySelfDamageTaken))
  end
  
  --HEAL THE TANK, as long as the tank is not me :)
  if myTank ~= myChar 
    and gmcp.Char.Status.position ~= "sleeping" 
    and gmcp.Char.Status.position ~= "resting" 
    and myRemainingCures &gt; 0 then
    myTankCurrentHp = tonumber(gmcp.Group.members[gmcp.Group.leader].hp)
    myTankMaximumHp = tonumber(gmcp.Group.members[gmcp.Group.leader].maxhp)
    myTankDamageTaken = myTankMaximumHp - myTankCurrentHp
    
    if myDebug == "1" then
      cecho("\n&lt;orange&gt;my_group_function() - myTankCurrentHp= "..tostring(myTankCurrentHp))
      cecho("\n&lt;orange&gt;my_group_function() - myTankMaximumHp= "..tostring(myTankMaximumHp))
      cecho("\n&lt;orange&gt;my_group_function() - myTankDamageTaken= "..tostring(myTankDamageTaken))
    end
    
    if myTankHealing == "1" and --only fire if tank healing is enabled
       myTankDamageTaken &gt; 0 then --only fire if tank has taken damage
      if myDebug == "1" then
        cecho("\n&lt;orange&gt;my_group_function() - ClericHealTank() fired.")
      end
      ClericHealTank()
    end
  end

  --HEAL MYSELF
  if gmcp.Char.Status.position ~= "sleeping" 
    and gmcp.Char.Status.position ~= "resting" 
    and mySelfDamageTaken &gt; 0 --only fire if i have taken damage
    and myRemainingCures &gt; 0 then 
    if myDebug == "1" then 
      cecho("\n&lt;orange&gt;my_group_function() - ClericHealSelf() fired.")
    end
    ClericHealSelf()
  end
  
end</script>
				<eventHandlerList>
					<string>gmcp.Char.Vitals</string>
					<string>gmcp.Group.members</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>my_prep_function</name>
				<packageName></packageName>
				<script>function my_prep_function()
  
  myPrepAvail = getMyConfiguration("prepavail")
  myPrepFull = getMyConfiguration("prepfull")
  myHealPrepTo = tonumber(getMyConfiguration("healprepto"))
  myHealWithSpell = getMyConfiguration("healwithspell")
  myRemainingCures = tonumber(gcmpPrepCount(myHealWithSpell))
  myEnergy = tonumber(gmcp.Char.Vitals.en)
  myMaxEnergy = tonumber(gmcp.Char.Vitals.maxen)
  myCureEnergyCost = tonumber(getMyConfiguration("cureenergycost"))
 
  --Exit if number of cures to prep equals 0
  if myHealPrepTo == 0 then
    return
  end
  
  if myPrepAvail == "0" and myPrepFull == "0" then
    --Perform standing preps while waiting for split, or at the tanks request
    if myRemainingCures &lt; myHealPrepTo and myEnergy &gt;= myCureEnergyCost then
      send("prepare "..myHealWithSpell)
    end
    --Exit if prepping disabled
    return
  end
    
  --pfree - stand up im done
  if (myRemainingCures &gt;= myHealPrepTo or myEnergy &lt; myCureEnergyCost) and myPrepAvail == "1" then
    
    disableTrigger("ClericFull")
    disableTrigger("ClericAvail")
    
    expandAlias("sta")
    send("gstatus I've prepped all that I could.")
    pfree_stand()
    
    if myRemainingCures &gt;= myHealPrepTo and myMaxEnergy &gt;= myCureEnergyCost then
      enableScript("prep_until_up_is_called")
    end
    
    return
  end
  
  --pfull - stand up im done
  if (myRemainingCures &gt;= myHealPrepTo or myEnergy &lt; myCureEnergyCost) and myPrepFull == "1" then
    disableTrigger("ClericFull")
    disableTrigger("ClericAvail")
    
    expandAlias("sta")
    send("gstatus Done prepping. "..tostring(myRemainingCures).." "..myHealWithSpell.." ready for action.")
    
    if myHealWithSpell == "heal" then
      send("gstatus I have "..tostring(myRemainingVials).." vials of holy water remaining.")
    end
    
    enableTrigger("CaptureGroupStatus")
    enableTrigger("PromptCapture")
    
    setMyConfiguration("prepfull", "0" , "1") 
  end
  
  --Prep 1 cure
  if myEnergy &gt;= myCureEnergyCost then
    send("prepare "..myHealWithSpell)
  end

end

function pfree_stand()

  send("gstatus "..tostring(myRemainingCures).." "..myHealWithSpell.." ready for action.")
  
  if myHealWithSpell == "heal" then
    send("gstatus I have "..tostring(myRemainingVials).." vials of holy water remaining.")
  end
  
  enableTrigger("CaptureGroupStatus")
  enableTrigger("PromptCapture")
  
  setMyConfiguration("prepavail", "0" , "1")

end


function my_prep_hurt_function()
  
  myEnergy = tonumber(gmcp.Char.Vitals.en)
  myMaxEnergy = tonumber(gmcp.Char.Vitals.maxen)
  
  myPrepAvail = getMyConfiguration("prepavail")
  myPrepFull = getMyConfiguration("prepfull")
  myHealPrepTo = tonumber(getMyConfiguration("healprepto"))
  myHealWithSpell = getMyConfiguration("healwithspell")
  myRemainingCures = tonumber(gcmpPrepCount(myHealWithSpell))
  
  myEnergy = tonumber(gmcp.Char.Vitals.en)
  myMaxEnergy = tonumber(gmcp.Char.Vitals.maxen)
  myCureEnergyCost = tonumber(getMyConfiguration("cureenergycost"))
  
  myHurtWithSpell = getMyConfiguration("hurtwithspell")
  myHurtPrepTo = tonumber(getMyConfiguration("hurtprepto"))
  myRemainingHurts = tonumber(gcmpPrepCount(myHurtWithSpell))
  myHurtEnergyCost = tonumber(getMyConfiguration("hurtenergycost"))
  
  --Prioritize healing
  if myRemainingCures &lt; myHealPrepTo then
    return
  end
  
  --Exit if number of hurts to prep equals 0
  if myHurtPrepTo == 0 then
    return
  end
  
  if myPrepAvail == "1" or myPrepFull == "1" then
    --Perform standing preps while waiting for split, or at the tanks request
    if myRemainingHurts &gt;= myHurtPrepTo and myEnergy &gt;= myHurtEnergyCost then
      send("prepare "..myHurtWithSpell)
    end
    --Exit if prepping disabled
    return
  end
    

   
  --pfree - stand up im done
  --if myRemainingHurts &gt;= myHurtPrepTo and myPrepAvail == "1" then
    
    --disableTrigger("ClericFull")
    --disableTrigger("ClericAvail")
    
    --expandAlias("sta")
    --send("gstatus I've prepped all that I could.")
    --pfree_stand()
    
    --if myRemainingCures &gt;= myHealPrepTo and myMaxEnergy &gt;= myCureEnergyCost then
    --  enableScript("prep_until_up_is_called")
    --end
    
    --return
  --end
  
  --pfull - stand up im done
  --if myRemainingHurts &gt;= myHurtPrepTo and myPrepFull == "1" then
    --disableTrigger("ClericFull")
    --disableTrigger("ClericAvail")
    
    --expandAlias("sta")
    --send("gstatus Done prepping. "..tostring(myRemainingHurts).." "..myHurtWithSpell.." ready for action.")
    
    --if myHealWithSpell == "heal" then
      --send("gstatus I have "..tostring(myRemainingVials).." vials of holy water remaining.")
    --end
    
    --enableTrigger("CaptureGroupStatus")
    --enableTrigger("PromptCapture")
    
    --setMyConfiguration("prepfull", "0" , "1") 
  --end
  
  --Prep 1 cure
  --if myEnergy &gt;= myHurtEnergyCost then
  --  send("prepare "..myHurtWithSpell)
  --end

end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="no" isFolder="no">
				<name>prep_until_up_is_called</name>
				<packageName></packageName>
				<script>function prep_until_up_is_called()
  
  myPreppingCure = getMyConfiguration("preppingcure")

  --Already prepping one, hold on
  if myPreppingCure == "1" then
    return
  end

  --Must be standing to attempt to contine prepping after a pfree
  if gmcp.Char.Status.position == "sleeping" and gmcp.Char.Status.position == "resting" then
    disableScript("prep_until_up_is_called")
    return
  end

  myEnergy = tonumber(gmcp.Char.Vitals.en)
  myMaxEnergy = tonumber(gmcp.Char.Vitals.maxen)
  
  --Even if I regened, still not enough energy to prep any more
  if myMaxEnergy &lt; myCureEnergyCost then
    disableScript("prep_until_up_is_called")
    return
  end
  
  --At or over threshold, stop trying to prep more
  if myRemainingCures &gt;= myHealPrepTo then
    disableScript("prep_until_up_is_called")
    return
  end
  
  if myRemainingCures &lt; myHealPrepTo and myEnergy &gt;= myCureEnergyCost then
    setMyConfiguration("preppingcure", "1", "1") 
    send("prepare "..myHealWithSpell)
  end
 
end</script>
				<eventHandlerList>
					<string>gmcp.Char.Vitals</string>
				</eventHandlerList>
			</Script>
		</ScriptGroup>
		<Script isActive="yes" isFolder="no">
			<name>LoadCleric</name>
			<packageName></packageName>
			<script>-------------------------------------------------
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function LoadCleric()

  cecho("\n&lt;orange&gt;LoadCleric() - function fired")

  PopulateMyVariablesCommands()

  initializeCureInfo()

  initializeHurtInfo()

  cecho("\n&lt;orange&gt;LoadCleric() - function finished")
  
end
</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>IsValidCureSpell</name>
			<packageName></packageName>
			<script>-------------------------------------------------
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function IsValidCureSpell(spell)

  --Create Database if not exists, otherwise update table schema
  create_tfe_database()
  --Load Database to local variable
  local mydb = db:get_database("skills")  
  
  local mysql = "select * from CureInfo where curespell = '"..spell.."' limit 1"
  local results = db:fetch_sql(mydb.CureInfo, mysql)
  
  if next(results) then
    return true
  else
    return false
  end
  
end
</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>IsValidHurtSpell</name>
			<packageName></packageName>
			<script>-------------------------------------------------
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function IsValidHurtSpell(spell)

  --Create Database if not exists, otherwise update table schema
  create_tfe_database()
  --Load Database to local variable
  local mydb = db:get_database("skills")  
  
  local mysql = "select * from HurtInfo where spell = '"..spell.."' limit 1"
  local results = db:fetch_sql(mydb.HurtInfo, mysql)
  
  if next(results) then
    return true
  else
    return false
  end
  
end
</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>SetAverageCures</name>
			<packageName></packageName>
			<script>-------------------------------------------------
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function SetAverageCures()

  myHealWithSpell = getMyConfiguration("healwithspell")
  
  --Create Database if not exists, otherwise update table schema
  create_tfe_database()
  --Load Database to local variable
  local mydb = db:get_database("skills")  
  
  local mysql = "select * from CureInfo where curespell = '"..myHealWithSpell.."' limit 1"
  local results = db:fetch_sql(mydb.CureInfo, mysql)
  
  if next(results) then
    setMyConfiguration("averagecures", results[1].averagevalue, "1") 
    setMyConfiguration("cureenergycost", results[1].costvalue, "1") 
  else
    --invalid command, exit function
    send("gstatus Invalid configuration : "..configuration)
    return
  end
  
end  	
</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>gcmpPrepCount</name>
			<packageName></packageName>
			<script>
function gcmpPrepCount(spellname)

  local totalCount = table.size(gmcp.Char.Prepare)
  local index = 1
  while index &lt;= totalCount do
    if gmcp.Char.Prepare[index].Spell == string.lower(spellname) then 
      return gmcp.Char.Prepare[index].Prepared 
    end
    index = index + 1
  end
  return 0
  
end
</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>ClericHealSelf</name>
			<packageName></packageName>
			<script>function ClericHealSelf()

  myAverageCures = tonumber(getMyConfiguration("averagecures"))
  mySelfDamageBeforeHeals = tonumber(getMyConfiguration("selfdamagebeforeheals"))
  
	--If I am at full Hp, then automatically reset cures sent to self to 0
	if mySelfDamageTaken == 0 or myCuresSentSelf &lt; 0 then
		setMyConfiguration("curessentself", "0", "1")
    myCuresSentSelf = 0
	end	
	
  if myDebug == "1" then 
  	cecho("\n&lt;orange&gt;ClericHealSelf() - Self mySelfDamageTaken= "..tostring(mySelfDamageTaken))  
  	cecho("\n&lt;orange&gt;ClericHealSelf() - Self myCuresSentSelf= "..tostring(myCuresSentSelf))  
  	cecho("\n&lt;orange&gt;ClericHealSelf() - Self myAverageCures= "..tostring(myAverageCures))
  end
	
  myEstimatedRemainingDamage = (mySelfDamageTaken - (myCuresSentSelf * myAverageCures))
  
  if myDebug == "1" then
    cecho("\n&lt;orange&gt;ClericHealSelf() - Self myEstimatedRemainingDamage= "..tostring(myEstimatedRemainingDamage)) 
  end
  
	if myEstimatedRemainingDamage &gt; mySelfDamageBeforeHeals then
		send("h self")
    setMyConfiguration("curessentself", tonumber(getMyConfiguration("curessentself"))+1, "1")
    myCuresSentSelf = tonumber(getMyConfiguration("curessentself"))
    cecho("\n&lt;orange&gt;ONE CURE SENT TO --&gt;&gt; "..myChar)
    send("gstatus "..myChar.." sent ("..tostring(myCuresSentSelf)..") to self "..tostring(myCuresSentSelf).." damage which is more than "..tostring(mySelfDamageBeforeHeals).." x1")
	end
	
	--If I have taken more damage than a single cure can handle, then send a second
	myEstimatedRemainingDamage = (mySelfDamageTaken - ((myCuresSentSelf + 1) * myAverageCures))
	
  if myDebug == "1" then
    cecho("\n&lt;orange&gt;ClericHealSelf() - Self myEstimatedRemainingDamage= "..tostring(myEstimatedRemainingDamage)) 
  end
  
	if myEstimatedRemainingDamage &gt; mySelfDamageBeforeHeals then
		send("h self")
    setMyConfiguration("curessentself", tonumber(getMyConfiguration("curessentself"))+1, "1")
    myCuresSentSelf = tonumber(getMyConfiguration("curessentself"))
    cecho("\n&lt;orange&gt;SECOND CURE SENT TO --&gt;&gt; "..myChar)
    send("gstatus "..myChar.." sent ("..tostring(myCuresSentSelf)..") to self "..tostring(myCuresSentSelf).." damage which is more than "..tostring(mySelfDamageBeforeHeals).." x2")
	end
	
	--If I have taken more damage than a two cures can handle, then send a third
	myEstimatedRemainingDamage = (mySelfDamageTaken - ((myCuresSentSelf + 2) * myAverageCures))
	
  if myDebug == "1" then
    cecho("\n&lt;orange&gt;ClericHealSelf() - Self myEstimatedRemainingDamage= "..tostring(myEstimatedRemainingDamage)) 
  end
  
	if myEstimatedRemainingDamage &gt; mySelfDamageBeforeHeals then
		send("h self")
    setMyConfiguration("curessentself", tonumber(getMyConfiguration("curessentself"))+1, "1")
    myCuresSentSelf = tonumber(getMyConfiguration("curessentself"))
    cecho("\n&lt;orange&gt;THIRD CURE SENT TO --&gt;&gt; "..myChar)
    send("gstatus "..myChar.." sent ("..tostring(myCuresSentSelf)..") to self "..tostring(myCuresSentSelf).." damage which is more than "..tostring(mySelfDamageBeforeHeals).." x3")
	end

  PendingTimeout()

end
</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>ClericHealTank</name>
			<packageName></packageName>
			<script>function ClericHealTank()

  myAverageCures = tonumber(getMyConfiguration("averagecures"))
  myTankDamageBeforeHeals = tonumber(getMyConfiguration("tankdamagebeforeheals"))
  
	--If target at full Hp, then automatically reset cures sent to self to 0
	if myTankDamageTaken == 0 or myCuresSentTank &lt; 0 then
    setMyConfiguration("curessenttank", "0", "1")
    myCuresSentTank = 0
	end
	
  if myDebug == "1" then  
  	cecho("\n&lt;orange&gt;ClericHealTank() - myTankDamageTaken= "..tostring(myTankDamageTaken))  
  	cecho("\n&lt;orange&gt;ClericHealTank() - myCuresSentTank= "..tostring(myCuresSentTank))  
  	cecho("\n&lt;orange&gt;ClericHealTank() - myAverageCures= "..tostring(myAverageCures)) 
	end
  
  myEstimatedRemainingDamage = (myTankDamageTaken - ((myCuresSentTank) * myAverageCures))
  
  if myDebug == "1" then  
  	cecho("\n&lt;orange&gt;ClericHealTank() - myEstimatedRemainingDamage= "..tostring(myEstimatedRemainingDamage)) 
  end
  
	if myEstimatedRemainingDamage &gt; myTankDamageBeforeHeals then
		send("h "..myTank)
    setMyConfiguration("curessenttank", tonumber(getMyConfiguration("curessenttank"))+1, "1")
    myCuresSentTank = tonumber(getMyConfiguration("curessenttank"))
		cecho("\n&lt;orange&gt;ONE CURE SENT TO --&gt;&gt; "..myTank)
    send("gstatus "..myChar.." sent ("..tostring(myCuresSentTank)..") to "..myTank.." "..tostring(myTankDamageTaken).." damage which is more than "..tostring(myTankDamageBeforeHeals).." x1")
	end
	
	--If I have taken more damage than a single cure can handle, then send a second
	myEstimatedRemainingDamage = (myTankDamageTaken - ((myCuresSentTank + 1) * myAverageCures))
	
  if myDebug == "1" then  
  	cecho("\n&lt;orange&gt;ClericHealTank() - myEstimatedRemainingDamage= " ..tostring(myEstimatedRemainingDamage)) 
  end
  
	if myEstimatedRemainingDamage &gt; myTankDamageBeforeHeals  then
		send("h "..myTank)
    setMyConfiguration("curessenttank", tonumber(getMyConfiguration("curessenttank"))+1, "1")
    myCuresSentTank = tonumber(getMyConfiguration("curessenttank"))
		cecho("\n&lt;orange&gt;SECOND CURE SENT TO --&gt;&gt; "..myTank)
    send("gstatus "..myChar.." sent ("..tostring(myCuresSentTank)..") to "..myTank.." "..tostring(myTankDamageTaken).." damage which is more than "..tostring(myTankDamageBeforeHeals).." x2")
	end
	
	--If I have taken more damage than a two cures can handle, then send a third
	myEstimatedRemainingDamage = (myTankDamageTaken - ((myCuresSentTank + 2) * myAverageCures))
	
  if myDebug == "1" then  
  	cecho("\n&lt;orange&gt;ClericHealTank() - myEstimatedRemainingDamage= " ..tostring(myEstimatedRemainingDamage)) 
  end
  
	if myEstimatedRemainingDamage &gt; myTankDamageBeforeHeals then
		send("h "..myTank)
    setMyConfiguration("curessenttank", tonumber(getMyConfiguration("curessenttank"))+1, "1")
    myCuresSentTank = tonumber(getMyConfiguration("curessenttank"))
		cecho("\n&lt;orange&gt;THIRD CURE SENT TO --&gt;&gt; "..myTank)
    send("gstatus "..myChar.." sent ("..tostring(myCuresSentTank)..") to "..myTank.." "..tostring(myTankDamageTaken).." damage which is more than "..tostring(myTankDamageBeforeHeals).." x3")
	end
		
  PendingTimeout()  
    
end</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>initializeCureInfo</name>
			<packageName></packageName>
			<script>function initializeCureInfo()

  create_tfe_database()
  --Load Database to local variable
  local mydb = db:get_database("skills")
  db:delete(mydb.CureInfo, true)
  db:add(mydb.CureInfo, {curespell="cure light", averagevalue=13, costvalue=15})
  db:add(mydb.CureInfo, {curespell="cure serious", averagevalue=44, costvalue=30})
  db:add(mydb.CureInfo, {curespell="cure critical", averagevalue=89, costvalue=60})
  db:add(mydb.CureInfo, {curespell="heal", averagevalue=160, costvalue=90})
  db:add(mydb.CureInfo, {curespell="restoration", averagevalue=270, costvalue=120})
  db:add(mydb.CureInfo, {curespell="group serious", averagevalue=44, costvalue=60})
  db:add(mydb.CureInfo, {curespell="group critical", averagevalue=89, costvalue=90})
  
end</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>initializeHurtInfo</name>
			<packageName></packageName>
			<script>function initializeHurtInfo()

  create_tfe_database()
  --Load Database to local variable
  local mydb = db:get_database("skills")
  db:delete(mydb.HurtInfo, true)
  db:add(mydb.HurtInfo, {spell="cause light", averagevalue=13, costvalue=15})
  db:add(mydb.HurtInfo, {spell="cause serious", averagevalue=44, costvalue=30})
  db:add(mydb.HurtInfo, {spell="cause critical", averagevalue=89, costvalue=60})
  db:add(mydb.HurtInfo, {spell="harm", averagevalue=160, costvalue=90})
  db:add(mydb.HurtInfo, {spell="slay", averagevalue=270, costvalue=120})
  
end</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>AutoSummoning</name>
			<packageName></packageName>
			<script>function AutoSummoning(requestor, target)

  myAutoSummon = getMyConfiguration("autosummon")
  mySummonLevel = tonumber(get_ability_level(gmcp.Char.Score.account,gmcp.Char.Score.name,"summon"))
  myEnergy = tonumber(gmcp.Char.Vitals.en)
  myMaxEnergy = tonumber(gmcp.Char.Vitals.maxen)
  
  --125-(5*L)
  myEnergyNeeded = 125-(5*mySummonLevel)

  if myEnergy &gt;= myEnergyNeeded then
    send("queue tell "..target.." Attempting to summon you per "..requestor..".")
    send("queue cast summon "..target)
    return
  end
  
  --free up energy to summon target
  while myEnergyNeeded &gt;= myMaxEnergy do
    send("queue tell "..requestor.." Freeing up energy, one moment.")
    send("h self")
    sleep(3000)
    myEnergy = tonumber(gmcp.Char.Vitals.en)
    myMaxEnergy = tonumber(gmcp.Char.Vitals.maxen)
  end
  
  while myEnergy &lt; myEnergyNeeded do
    send("queue tell "..requestor.." waiting for energy to regenerate, one moment.")
    sleep(1000)
    myEnergy = tonumber(gmcp.Char.Vitals.en)
    myMaxEnergy = tonumber(gmcp.Char.Vitals.maxen)
  end

  send("queue tell "..target.." Attempting to summon you per "..requestor..".")
  send("queue cast summon "..target)
  
end</script>
			<eventHandlerList />
		</Script>
	</ScriptPackage>
	<KeyPackage />
	<HelpPackage>
		<helpURL></helpURL>
	</HelpPackage>
</MudletPackage>
