<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Paladin</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Battlemind</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>recast</name>
					<script>setMyConfiguration("battlemind", "1" , "1")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast battlemind +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>faded</name>
					<script>setMyConfiguration("battlemind", "0" , "1")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your mind is no longer divinely focused on battle.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Commands</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>count</name>
					<script>myHandReserveEnergy = tonumber(getMyConfiguration("handreserveenergy"))

mySingleTargetHealing = getMyConfiguration("singletargethealing")
mySingleTargetHealingActive = getMyConfiguration("singletargethealingactive")
mySingleCureEnergyCost = tonumber(getMyConfiguration("singlecureenergycost"))
mySingleTargetHealSpell = getMyConfiguration("singletargethealspell")

if mySingleTargetHealing == "1" and mySingleTargetHealingActive == "1" then
  local maxen = gmcp.Char.Vitals.maxen - myHandReserveEnergy
  local avail = math.floor(gmcp.Char.Vitals.en / mySingleCureEnergyCost)
  local total = math.floor(gmcp.Char.Vitals.maxen / mySingleCureEnergyCost)
  send("gstatus "..gmcp.Char.Score.name.." has "..tostring(avail).." TARGET "..mySingleTargetHealSpell.." spell(s) available out of "..tostring(total).." total.")
end

myGroupHealing = getMyConfiguration("grouphealing")
myGroupHealingActive = getMyConfiguration("grouphealingactive")
myGroupCureEnergyCost = tonumber(getMyConfiguration("groupcureenergycost"))
myGroupHealSpell = getMyConfiguration("grouphealspell")

if myGroupHealing == "1" and myGroupHealingActive == "1" then
  
  local maxen = gmcp.Char.Vitals.maxen - myHandReserveEnergy
  local avail = math.floor(gmcp.Char.Vitals.en / myGroupCureEnergyCost)
  local total = math.floor(gmcp.Char.Vitals.maxen / myGroupCureEnergyCost)
  
  send("gstatus "..gmcp.Char.Score.name.." has "..tostring(avail).." GROUP "..myGroupHealSpell.." spell(s) available out of "..tostring(total).." total.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) (tells|tell) (the|your) group(.*)\: "(?i)count"$</string>
						<string>^You say(.*)\: "(?i)count"$</string>
						<string>^(\w+) reports group status\: "(?i)count"$</string>
						<string>^(\w+) report group status\: "(?i)count"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>cure blind</name>
					<script>send("cast cure blind " .. matches[5])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(?i)cb (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(?i)cb (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>cure delay</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	
	--AutoHeal[gmcp.Char.Score.name]["CureDelay"] = tonumber(matches[6])
  setMyConfiguration("curedelay", matches[6] , "1")
  myCureDelay = getMyConfiguration("curedelay")
	send("gstatus "..gmcp.Char.Score.name.." has updated cure delay to: "..tostring(myCureDelay).." seconds.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(\w+) (?i)delay (\d+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) (?i)delay (\d+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>cure disease</name>
					<script>oldmatches = matches[5]

expandAlias("get3 rose")
send("cast cure disease " .. oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(?i)cd (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(?i)cd (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>cure poison</name>
					<script>send("cast cure poison " .. matches[5])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tell|tells) (your|the) group(.*)\: "(?i)cp (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(?i)cp (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>debug</name>
					<script>if matches[5] == "on" or matches[5] == "true" or matches[5] == "1" then
  --myVariableTable["debug"] = true
  setMyConfiguration("debug", "1" , "1")
else
  --myVariableTable["debug"] = false
  setMyConfiguration("debug", "0" , "1")
end
myDebug = getMyConfiguration("debug")
send("gstatus Debug set to: "..tostring(myDebug))</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "debug (\w+)"$</string>
						<string>^(You) (say)(.*)\: "debug (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>groupheal on off</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	
  --ON or OFF
  if string.lower(matches[6]) == "on" then
    setMyConfiguration("grouphealing", "1" , "1")
    myGroupHealingActive = getMyConfiguration("grouphealingactive")
    myGroupHealingPercent = getMyConfiguration("grouphealingpercent")
    --myGroupHealingMin = getMyConfiguration("grouphealingpercentmin")
    myGroupHealSpell = getMyConfiguration("grouphealspell")
    myHandReserveEnergy = getMyConfiguration("handreserveenergy")
  	--AutoHeal[gmcp.Char.Score.name]["GroupHealing"] = true --false is disabled, true is enabled
  	send("gstatus "..gmcp.Char.Score.name.." has group healing enabled.")
  	send("gstatus "..gmcp.Char.Score.name.." will heal anyone that drops below "..tostring(myGroupHealingPercent).."% of their health with a minimum of "..tostring(myGroupHealingPercent).." health.")
		if myGroupHealingActive == "1" then
      send("gstatus "..gmcp.Char.Score.name.." will be healing Actively (during combat) with the spell "..myGroupHealSpell..".")
    else
      send("gstatus "..gmcp.Char.Score.name.." will be healing Passively (after combat) with the spell "..myGroupHealSpell..".")
      if myGroupHealSpell == "hand" then
        send("gstatus Lay on hands energy reserve set to: "..tostring(myHandReserveEnergy).." (Use gtell "..gmcp.Char.Score.name.." reserve &lt;number&gt;)")
      end
    end
  elseif string.lower(matches[6]) == "off" then
    setMyConfiguration("grouphealing", "0" , "1")
  	--AutoHeal[gmcp.Char.Score.name]["GroupHealing"] = false
  	send("gstatus "..gmcp.Char.Score.name.." has group healing disabled.")
  end  
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(\w+) (?i)groupheal (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) (?i)groupheal (\w+)"$</string>
						<string>(tells|tell) (the|your) group(.*)\: "(\w+) (?i)healgroup (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) (?i)healgroup (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>groupheal percentage</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	
  if tonumber(matches[6]) &gt;=0 and tonumber(matches[6]) &lt;=100 then
    setMyConfiguration("grouphealingpercent", matches[6] , "1")
    myGroupHealingPercent = getMyConfiguration("grouphealingpercent")
    --AutoHeal[gmcp.Char.Score.name]["GroupHealingPercent"] = tonumber(matches[6])
    send("gstatus "..gmcp.Char.Score.name.." will heal anyone that drops below "..tostring(myGroupHealingPercent).."% of their health.")
  else
    send("gstatus Please enter a number between 0 and 100%.")
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) (?i)groupheal (\d+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) (?i)groupheal (\d+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>groupheal min</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	
  if tonumber(matches[6]) &gt;=0 then
    setMyConfiguration("grouphealingmin", matches[6] , "1")
    myGroupHealingMin = getMyConfiguration("grouphealingmin")
  
    --AutoHeal[gmcp.Char.Score.name]["GroupHealingMin"] = tonumber(matches[6])
    send("gstatus "..gmcp.Char.Score.name.." will heal anyone that drops below "..tostring(myGroupHealingMin).." health.")
  else
    send("gstatus Please enter a number great than or equal to 0.")
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) (?i)grouphealmin (\d+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) (?i)grouphealmin (\d+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>intercede</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	
	send("intercede " .. matches[6])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) (?i)intercede (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>heal target</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 

	if string.lower(matches[6]) == "heal" then
		send("hand " .. matches[7])
	end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(\w+) (\w+) (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) (\w+) (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>neutralize</name>
					<script>send("cast neutralize " .. matches[6])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(?i)(neut|neutralize|neuter) (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(?i)(neut|neutralize|neuter) (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>pfull</name>
					<script>--tells the group(.*)\: "(?i)pfree"$
--^(\w+) (report|reports) (group) status: "(?i)pfree"$
myBattlemind = getMyConfiguration("battlemind")
if myBattlemind == "0" then
  expandAlias("get4 vial.holy.water")
  send("queue cast battlemind")
  expandAlias("put4 vial.holy.water")
end
expandAlias("sle")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>tells the group(.*)\: "(?i)pfull"$</string>
						<string>^(\w+) (report|reports) (group) status: "(?i)pfull"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>poke for cures</name>
					<script>send("hand " .. matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) pokes you.$</string>
						<string>^(\w+) sends you staggering with a clumsy poke!$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>reserve mana</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	
	--AutoHeal[myChar]["HandReserveEnergy"] = tonumber(matches[6])
  setMyConfiguration("handreserveenergy", matches[6] , "1")
  myHandReserveEnergy = getMyConfiguration("handreserveenergy")
	send("gstatus "..gmcp.Char.Score.name.." will reserve "..tostring(myHandReserveEnergy).." energy during lay on hands.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(\w+) (?i)reserve (\d+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) (?i)reserve (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>rescueself</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	setMyConfiguration("rescueselfhp", tonumber(matches[6]) , "1")
  myRescueSelfHp = getMyConfiguration("rescueselfhp")
	send("gstatus I will rescue tank when I have more than or equal to ("..tostring(myRescueSelfHp)..")hp.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) rescueself (\d+)"$</string>
						<string>^(You) (say)(.*)\: "(\w+) rescueself (\d+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>refill canteens</name>
					<script>if Tank == gmcp.Char.Score.name or matches[2] == Tank then
		fillstring = ""
  expandAlias("refillwater")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) (tells|tell) (your|the) group(.*): "water"$</string>
						<string>^(\w+) (report|reports) (group) status: "(?i)water"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>refill canteens say</name>
					<script>fillstring = ""
expandAlias("refillwater")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You say(.*): "(?i)water"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>rescueat</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	setMyConfiguration("rescuetankhp", tonumber(matches[6]) , "1")
  myRescueTankHp = getMyConfiguration("rescuetankhp")
	send("gstatus I will rescue tank when they are equal to or below ("..tostring(myRescueTankHp)..")hp.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) rescueat (\d+)"$</string>
						<string>^(You) (say)(.*)\: "(\w+) rescueat (\d+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>revitalize</name>
					<script>oldmatches = matches[6]

expandAlias("put3 troll.flesh")
expandAlias("get3 troll.fles")
send("cast revitalize " .. oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(?i)(revit|revite|revitalize) (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(?i)(revit|revite|revitalize) (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>sanctify</name>
					<script>oldmatches = matches[6]
expandAlias("get3 alum")
expandAlias("sanc " .. oldmatches)
expandAlias("put3 alum")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(?i)(sanc|sanctify) (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>SelfHeal Offset</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	
	--AutoHeal[gmcp.Char.Score.name]["SelfDamageBeforeHeals"] = tonumber(matches[6])
  setMyConfiguration("selfdamagebeforeheals", matches[6] , "1")
  mySelfDamageBeforeHeals = tonumber(getMyConfiguration("selfdamagebeforeheals"))
	send("gstatus "..gmcp.Char.Score.name.." will cure self after taking more than "..tostring(mySelfDamageBeforeHeals)..".")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) (?i)selfheal (\d+)"$</string>
						<string>^(You) (say)(.*)\: "(\w+) (?i)selfheal (\d+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) (?i)selfheal (\d+)"$</string>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) (?i)healself (\d+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) (?i)healself (\d+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>selfheal healwith</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 

	oldmatches = matches[6]

  if table.contains(CureSpellsSinglePaladin, string.lower(oldmatches)) then 
    setMyConfiguration("selfhealspell", string.lower(oldmatches) , "1")
    mySelfHealSpell = getMyConfiguration("selfhealspell")
		--SetAverageCuresPaladin() 
		--SetCureEnergyCostPaladin()
    SetAveragePaladinCures()
  	send("gstatus Self heal spell now set to "..mySelfHealSpell..".")
	else
		send("gstatus You must enter a valid cure spell - ("..table.concat(CureSpellsSinglePaladin, ", ")..").")
	end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) (?i)selfhealwith (.*)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) (?i)selfhealwith (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>TargetHeal Offset</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	
  mySingleTargetHealing = getMyConfiguration("singletargethealing")
  mySingleTarget = getMyConfiguration("singletarget")
  
 
  if mySingleTargetHealing == "0"
  and table.contains(table.keys(gmcp.Group.members),string.title(matches[6])) then
    send("gstatus Cannot set healing offset until single target heal is enabled (use gtell "..gmcp.Char.Score.name.." targetheal [on|off])")
    return
  end

  setMyConfiguration("singletargetdamagebeforehealing", matches[6] , "1")
  mySingleTargetDamageBeforeHealing = getMyConfiguration("singletargetdamagebeforehealing")
	send("gstatus "..gmcp.Char.Score.name.." will cure "..mySingleTarget.." (target) after taking more than "..tostring(mySingleTargetDamageBeforeHealing).." damage.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) targetheal (\d+)"$</string>
						<string>(tells|tell) (your|the) group(.*)\: "(\w+) healat (\d+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) healat (\d+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) targetheal (\d+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>TargetHeal On or Off</name>
					<script>if string.lower(matches[2]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[2]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[2]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	
  mySingleTargetHealingActive = getMyConfiguration("singletargethealingactive")
  mySingleTargetDamageBeforeHealing = getMyConfiguration("singletargetdamagebeforehealing")
  mySingleTarget = getMyConfiguration("singletarget")
  mySingleTargetHealSpell = getMyConfiguration("singletargethealspell")
  if string.lower(matches[3]) == "on" then
    setMyConfiguration("singletargethealing", "1" , "1")
    mySingleTargetHealing = getMyConfiguration("singletargethealing")
  	send("gstatus "..gmcp.Char.Score.name.." has single target healing enabled.")
  	send("gstatus "..gmcp.Char.Score.name.." will heal "..mySingleTarget.." when target drops below "..tostring(mySingleTargetDamageBeforeHealing).." health of their maximum.")
		if mySingleTargetHealingActive == "1" then
      send("gstatus "..gmcp.Char.Score.name.." will be healing Actively (during combat) with the spell "..mySingleTargetHealSpell..".")
    else
      send("gstatus "..gmcp.Char.Score.name.." will be healing Passively (after combat) with lay on hands.")
    end
  elseif string.lower(matches[3]) == "off" then
    setMyConfiguration("singletargethealing", "0" , "1")
  	send("gstatus "..gmcp.Char.Score.name.." has single target healing disabled.")
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\w+ tells|tell the|your group.*\: "(\w+) (?i)targetheal (\w+)"$</string>
						<string>^\w+\s(?:report|reports)\sgroup\sstatus\:\s\"(\w+)\s(?i)targetheal\s(\w+)\"</string>
						<string>^\w+ tells|tell the|your group.*\: "(\w+) (?i)healtarget (\w+)"$</string>
						<string>^\w+\s(?:report|reports)\sgroup\sstatus\:\s\"(\w+)\s(?i)targetheal\s(\w+)\"</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>TargetHeal Set Target</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
  
  mySingleTargetHealing = getMyConfiguration("singletargethealing")
  
  if mySingleTargetHealing == "0"
  and table.contains(table.keys(gmcp.Group.members),string.title(matches[6])) then
    send("gstatus Cannot set target until single target heal is enabled (use gtell "..gmcp.Char.Score.name.." targetheal [on|off])")
    return
  end
  
  if table.contains(table.keys(gmcp.Group.members),string.title(matches[6])) then
    setMyConfiguration("singletarget", string.title(matches[6]) , "1")
    mySingleTarget = getMyConfiguration("singletarget")
  	send("gstatus "..gmcp.Char.Score.name.." will target heal "..mySingleTarget..".")
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(\w+) (?i)targetheal (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) status\: "(\w+) (?i)targetheal (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>TargetHeal Set Active Passive</name>
					<script>if string.lower(matches[2]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[2]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[2]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	
  mySingleTargetHealingActive = getMyConfiguration("singletargethealingactive")
  mySingleTargetDamageBeforeHealing = getMyConfiguration("singletargetdamagebeforehealing")
  mySingleTarget = getMyConfiguration("singletarget")
  mySingleTargetHealSpell = getMyConfiguration("singletargethealspell")
  if string.lower(matches[3]) == "active" then
    setMyConfiguration("singletargethealingactive", "1" , "1")
    mySingleTargetHealing = getMyConfiguration("singletargethealingactive")
  	--send("gstatus "..gmcp.Char.Score.name.." has single target healing enabled.")
  	--send("gstatus "..gmcp.Char.Score.name.." will heal "..mySingleTarget.." when target drops below "..tostring(mySingleTargetDamageBeforeHealing).." health of their maximum.")
		if mySingleTargetHealingActive == "1" then
      send("gstatus "..gmcp.Char.Score.name.." will be healing Actively (during combat) with the spell "..mySingleTargetHealSpell..".")
    else
      send("gstatus "..gmcp.Char.Score.name.." will be healing Passively (after combat) with lay on hands.")
    end
  elseif string.lower(matches[3]) == "passive" then
    setMyConfiguration("singletargethealingactive", "0" , "1")
  	send("gstatus "..gmcp.Char.Score.name.." will be healing Passively (after combat) with lay on hands.")
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\w+\s(?:report|reports)\sgroup\sstatus\:\s\"(\w+)\s(?i)targetheal\s(\w+)\"</string>
						<string>^\w+\s(?:report|reports)\sgroup\sstatus\:\s\"(\w+)\s(?i)healtarget\s(\w+)\"</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>help</name>
					<script>if (string.lower(matches[6]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[6]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[6]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4))
	and (string.lower(matches[7]) == "help" or string.lower(matches[7]) == "status")
	then 

  myChar = gmcp.Char.Score.name
  myCharShort = string.sub(string.lower(myChar),1,3)
  myCureDelay = tonumber(getMyConfiguration("curedelay"))
  mySelfHealSpell = getMyConfiguration("selfhealspell")
  mySelfDamageBeforeHeals = getMyConfiguration("selfdamagebeforeheals")
  mySingleTarget = getMyConfiguration("singletarget")
  myTankRescue = getMyConfiguration("tankrescue")
  myGroupHealing = getMyConfiguration("grouphealing")
  mySingleTargetHealing = getMyConfiguration("singletargethealing")
  mySingleTargetDamageBeforeHealing = tonumber(getMyConfiguration("singletargetdamagebeforehealing"))
  mySingleTargetHealSpell = getMyConfiguration("singletargethealspell")
  myTankRescue = getMyConfiguration("tankrescue")
  myRescueTankHp = tonumber(getMyConfiguration("rescuetankhp"))
  myRescueSelfHp = tonumber(getMyConfiguration("rescueselfhp"))
  myHandReserveEnergy = tonumber(getMyConfiguration("handreserveenergy"))
  myGroupHealSpell = getMyConfiguration("grouphealspell")
  myGroupHealingPercent = tonumber(getMyConfiguration("grouphealingpercent"))
  myGroupHealingMin = tonumber(getMyConfiguration("grouphealingmin"))
  myBattlemind = getMyConfiguration("battlemind")

  expandAlias("standardhelp")
  expandAlias("standardhelpcaster")
	send("gstatus Members in Group: "..table.concat(CharsInGroup, ", "))
  send("gstatus Cure delay to: "..tostring(myCureDelay).." seconds.")
  --SELF HEALING
  send("gstatus SelfHealing - "..myChar.." is healing during combat with the spell "..mySelfHealSpell.." - Cannot change!")
  send("gstatus SelfHealing - "..myChar.." will fire when I drop below "..tostring(mySelfDamageBeforeHeals).." health of my maximum - gtell '"..myCharShort.." selfheal [number]' to change.")
  send("gstatus SelfHealing - "..myChar.." is healing after combat with lay on hands - Cannot change!")
  --GROUP HEALING
  if myGroupHealing == "1" then
  	send("gstatus GroupHealing - "..myChar.." has group healing ENABLED. - gtell '"..myCharShort.." groupheal [on|off]' to toggle.")
    send("gstatus GroupHealing - "..myChar.." is healing during combat with the spell "..myGroupHealSpell..".")
    send("gstatus GroupHealing - "..myChar.." has Lay on Hands energy reserve set to: "..tostring(myHandReserveEnergy).." (Use gtell "..myCharShort.." reserve &lt;number&gt;)")
  	send("gstatus GroupHealing - "..myChar.." will heal anyone that drops below "..tostring(myGroupHealingPercent).."% of their health - gtell '"..myCharShort.." groupheal [1-100]' to change.")
    send("gstatus GroupHealing - "..myChar.." will heal anyone that drops below "..tostring(myGroupHealingMin).." health - gtell '"..myCharShort.." grouphealmin [number]' to change.")
  else
  	send("gstatus GroupHealing - "..myChar.." has group healing disabled. - gtell '"..myCharShort.." groupheal [on|off]' to toggle.")
  end
  --SINGLE TARGET HEALING
  if mySingleTargetHealing == "1" then
  	send("gstatus TargetHealing - "..myChar.." has single target healing ENABLED - gtell '"..myCharShort.." targetheal [on|off]' to toggle.")
  	send("gstatus TargetHealing - "..myChar.." will target heal "..mySingleTarget.." - gtell '"..myCharShort.." targetheal [group member]' to change.")
    send("gstatus TargetHealing - "..myChar.." will target heal "..mySingleTarget.." - gtell '"..myCharShort.." targetheal [active|passive]' to change.")
    send("gstatus TargetHealing - "..myChar.." will heal when "..mySingleTarget.." drops below "..tostring(mySingleTargetDamageBeforeHealing).." health of their maximum - gtell '"..myCharShort.." targetheal [number]' to change.")
    send("gstatus TargetHealing - "..myChar.." is healing during combat with the spell "..mySingleTargetHealSpell.." - Cannot change!.")
    send("gstatus TargetHealing - "..myChar.." is healing after combat with lay on hands - Cannot change!")
  else
  	send("gstatus TargetHealing - "..myChar.." has single target healing DISABLED - gtell '"..myCharShort.." targetheal [on|off]' to toggle.")
  end
	if myBattlemind == "1" then
		send("gstatus Battlemind is online")
	else
		send("gstatus Battlemind is offline, I will recast on up, pfree, or pfull pending enough energy.")
	end
	--send("gstatus "..myChar.." will cure self after taking more than "..tostring(mySelfDamageBeforeHeals).." damage. ["..myCharShort.." healself &lt;number&gt;]")
  if myTankRescue == "1" then
    send("gstatus Automatic tank rescues are ON - gtell '"..myCharShort.. " rescue [on|off]' to toggle.")
    send("gstatus "..myChar.." will rescue tank when they are equal to or below ("..tostring(myRescueTankHp)..") - gtell '"..myCharShort.." rescueat [number]' to configure.")
    send("gstatus "..myChar.." will rescue tank when I have more than or equal to ("..tostring(myRescueSelfHp)..") - gtell '"..myCharShort.." rescueself [number]' to configure.")
  else
    send("gstatus Automatic tank rescues are OFF - gtell '"..myCharShort.. " rescue [on|off]' to toggle.")
  end
  send("gstatus gtell/gstatus 'cp &lt;target&gt;' for me to cure poison someone.")
	send("gstatus gtell/gstatus 'cb &lt;target&gt;' for me to cure blindness someone.")
  send("gstatus gtell/gstatus '"..myCharShort.." acb' for me to auto cure blind the group.")
	send("gstatus gtell/gstatus 'cd &lt;target&gt;' for me to cure disease someone.")
	send("gstatus gtell/gstatus 'neut &lt;target&gt;' for me to neutralize someone.")
	send("gstatus gtell/gstatus 'revit &lt;target&gt;' for me to revitalize someone.")
	send("gstatus gtell/gstatus 'sanctify &lt;target&gt;' for me to sanctify an item.")
	send("gstatus gtell/gstatus '"..myCharShort.." intercede &lt;target&gt;' for me to intercede someone - 'none' to turn off.")
	--send("gstatus gtell/gstatus '"..myCharShort.." healself &lt;damage taken before cures&gt;'.")
  send("gstatus gtell/gstatus '"..myCharShort.." list' - will display my reagent supply.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) (tells|tell) (the|your) group(.*): "(\w+) (\w+)"$</string>
						<string>^(\w+) (report|reports) (group) (status): "(\w+) (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>tank rescues on off</name>
					<script>if string.lower(matches[5]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[5]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[5]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 

  matchessix = matches[6]

  myRescueTankHp = getMyConfiguration("rescuetankhp")
  myRescueSelfHp = getMyConfiguration("rescueselfhp")
	 
  if string.lower(matchessix) == "on" then
    if gmcp.Group.leader ~= gmcp.Char.Score.name then
    	setMyConfiguration("TankRescue", 1, 1)
    	send("gstatus "..gmcp.Char.Score.name.." has tank rescues enabled.")
      send("gstatus I will rescue tank when they are equal to or below ("..tostring(myRescueTankHp)..").")
      send("gstatus I will rescue tank when I have more than or equal to ("..tostring(myRescueSelfHp)..").")
    else
      setMyConfiguration("TankRescue", 0, 1)
      send("gstatus I cannot rescue myself while leading the group.")
    end
  elseif string.lower(matchessix) == "off" then
  	setMyConfiguration("TankRescue", 0, 1)
  	send("gstatus "..gmcp.Char.Score.name.." has tank rescues disabled.")
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(tells|tell) (the|your) group(.*)\: "(\w+) (?i)rescue (\w+)"$</string>
						<string>(tells|tell) (the|your) group(.*)\: "(\w+) (?i)rescues (\w+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>up</name>
					<script>myBattlemind = getMyConfiguration("battlemind")
expandAlias("sta")
if myBattlemind == "0" then
  expandAlias("get4 vial.holy.water")
  send("cast battlemind")
  expandAlias("put4 vial.holy.water")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) (tells|tell) (the|your) group(.*)\: "(?i)up"$</string>
						<string>^You say(.*) "(?i)up"$</string>
						<string>^(\w+) (report|reports) group status: "(?i)up"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>PaladinDeath</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>DeathLeechSpells</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>continual light</name>
						<script>--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "continual light"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\ncontinual light releeched")

send ("wear shimmering.ball.mage-light")
send ("wear golden.light")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast continual light +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>bless</name>
						<script>--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "bless"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\nbless releeched")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast bless +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>holy wrath</name>
						<script>--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "holy wrath"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\nholy wrath releeched")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast holy wrath +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>revitalize</name>
						<script>--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")

local results = db:fetch(mydb.deathleech, {db:eq(mydb.deathleech.spell, "revitalize"),
                													db:eq(mydb.deathleech.character, gmcp.Char.Score.name)})[1]

results.leeched = "yes"
db:update(mydb.deathleech, results)
echo("\nrevitalize releeched")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+++ You cast revitalize +++</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>death</name>
					<script>send("remove golden.ball")
send("remove shimmering.ball")
onDeath()

--Create Database if not exists, otherwise update table schema
create_tfe_database()

--Load Database to local variable
local mydb = db:get_database("skills")
													
db:set(mydb.deathleech.leeched, "no", db:eq(mydb.deathleech.character, gmcp.Char.Score.name))

tempTimer(10, [[ send ("gstatus Attempting to stand.")
							   send ("cstatus Attempting to stand.") 
								 send ("stand") ]])
								 
tempTimer(15, [[ send ("gstatus Attempting to go north one to death.")
							   send ("cstatus Attempting to go north one to death.") 
								 send ("north &amp; east") ]])
								 
tempTimer(20, [[ send ("gstatus Attempting to have death take me to Medienne.")
							   send ("cstatus Attempting to have death take me to Medienne.") 
								 send ("to death med") ]])
								 
tempTimer(25, [[ send ("gstatus Ok I should be in Medienne at the Crossroads.")
							   send ("cstatus Ok I should be in Medienne at the Crossroads.") 
								 send ("gstatus Tell me or gtell 'reportpos' to confirm.") ]])
								 
tempTimer(30, [[ send ("gstatus Please give me back all gear and have me wear everything before issuing the 'gtell/gstatus " .. gmcp.Char.Score.name .. " deathleech' command.")
							   send ("cstatus Please give me back all gear and have me wear everything before issuing the 'gtell/gstatus " .. gmcp.Char.Score.name .. " deathleech' command.") ]])
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You have been KILLED!!$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>death leech</name>
					<script>if string.lower(matches[3]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[3]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[3]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 
	
  send("gstatus Attempting to releech now.")
  enableTrigger("DeathLeechSpells")
  
  --Create Database if not exists, otherwise update table schema
  create_tfe_database()
  
  --Load Database to local variable
  local mydb = db:get_database("skills")
  
  local mysql = "select * from deathleech where character = '" .. gmcp.Char.Score.name .. "' and leeched = 'no'"
  local results = db:fetch_sql(mydb.deathleech, mysql)
  
  if next(results) then
  	for _, row in ipairs(results) do
  			if row.spell == "continual light" then
  				expandAlias("get3 twist.wire")
  			end
  			if row.spell == "revitalize" then
  				expandAlias("get3 troll.flesh")
  			end
  			if row.spell == "holy wrath" then
  				expandAlias("get3 vial.oil.sac")
  			end
  	
  		 	send("cast " .. row.spell)
  	end	
  else
  	send("gstatus All spells are releeched already.")
  	disableTrigger("DeathLeechSpells")
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>tells the group(.*): "(\w+) (deathleech|deathleach)"$</string>
						<string>^You tell your group(.*): "(\w+) (deathleech|deathleach)"$</string>
						<string>^You say (.*): "(\w+) (deathleech|deathleach)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>death leech - edit leeched spells</name>
					<script>if string.lower(matches[3]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[3]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[3]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 

deathleechedit(matches[5])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>tells the group (.*): "(\w+) (deathleech|deathleach) (.*)"$</string>
						<string>^You say (.*): "(\w+) (deathleech|deathleach) (.*)"$</string>
						<string>^You tell your group(.*): "(\w+) (deathleech|deathleach) (.*)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>death leech list</name>
					<script>if string.lower(matches[3]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[3]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[3]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 

  deathleechlist()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>tells the group (.*): "(\w+) (deathleechlist|deathleachlist)"$</string>
						<string>^You say (.*): "(\w+) (deathleechlist|deathleachlist)"$</string>
						<string>^You tell your group(.*): "(\w+) (deathleechlist|deathleachlist)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>death leech clear</name>
					<script>if string.lower(matches[3]) == string.lower(gmcp.Char.Score.name) 
	or string.sub(string.lower(matches[3]),1,3) == string.sub(string.lower(gmcp.Char.Score.name),1,3) 
	or string.sub(string.lower(matches[3]),1,4) == string.sub(string.lower(gmcp.Char.Score.name),1,4) then 

deathleechclear()

end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>tells the group(.*)\: "(\w+) (deathleechclear|deathleachclear)"$</string>
						<string>^You say(.*)\: "(\w+) (deathleechclear|deathleachclear)"$</string>
						<string>^You tell your group(.*)\: "(\w+) (deathleechclear|deathleachclear)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>GatherReagents</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>ball of ice</name>
					<script>send("get ball.ice")
send("put ball.ice temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A ball of ice lies on the ground, tightly packed from ice crystals.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>pile of ice crystals</name>
					<script>send("get ice.cry")
send("put ice.cry temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A pile of ice crystals lies here, shimmering slightly.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>snail shell</name>
					<script>send("get snail.shell")
send("put snail.shell temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A snail shell lies on the ground here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>grain of sand</name>
					<script>send("get grain.sand")
send("put grain.sand temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A grain of sand lies almost invisible on the ground.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>spider's web</name>
					<script>send("get spider.web")
send("put spider.web temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A small piece of spider's web lies here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>pebble</name>
					<script>send("get pebble")
send("put pebble temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A nice-looking pebble attracts your attention here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>aloe</name>
					<script>send("pick aloe")
send("put aloe temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>An aloe plant grows here, its spiny leaves sticking out everywhere.</string>
						<string>With a certain deftness, you snap an aloe leaf cleanly from the plant.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>herbs</name>
					<script>send("get herbs")
send("put herbs temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A clump of herbs grows sweet and fragrant.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>glass bead</name>
					<script>send("get glass.bead")
send("put glass.bead temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A glass bead lies on the ground here, forgotten.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>seashell</name>
					<script>send("get seashell &amp; put seashell temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A seashell is covered with sand.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>wintergreen</name>
					<script>send("pick wintergreen &amp; put wintergreen temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A wintergreen bush sends a fresh, clean aroma into the air.</string>
						<string>You pick a bit from the bush.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>sage</name>
					<script>send("get sage &amp; put sage temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A handful of sage, cedar, and cinnamon lies here in a small clump.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>splinter of ebony</name>
					<script>send("get splinter.ebony")
send("put splinter.ebony temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A splinter of ebony sits on the ground.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>shard of bone</name>
					<script>send("get shard.bone")
send("put shard.bone temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A shard of bone is lying here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>shard of glass</name>
					<script>send("get shard.glass")
send("put shard.glass temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A shard of glass lies glistening on the ground.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>obsidian</name>
					<script>send("get shard &amp; put shard temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A shard of obsidian lies glistening on the ground.</string>
						<string>A handful of obsidian shards lies in disarray.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>dark gravel</name>
					<script>send("get gravel")
send("put gravel temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A pile of dark gravel lies here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>beetle shell</name>
					<script>send("get beetle")
send("put beetle temp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A dried-out beetle shell lies here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Grouping</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Join Group</name>
					<script>myTank = gmcp.Group.leader
myChar = gmcp.Char.Score.name
send("opt autoloot 2")
send("cstatus " .. gmcp.Char.Score.name .. " has joined " .. myTank .. "'s group.")
send("gstatus Gtell or Gstatus '" .. gmcp.Char.Score.name .. " status' to see my commands.")
--AutoHeal[gmcp.Char.Score.name]["SingleTarget"] = myTank --Default to the tank when following
setMyConfiguration("singletarget", myTank , "1")
disableTrigger("SpamSpells")
disableTrigger("AllBots")
disableTrigger("StableBots")
disableTrigger("SpamMapForRepop")
setMyConfiguration("hpmonitor", "0", "1")
disableTimer("scanner")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You join (.*)'s group.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Disband</name>
					<script>myTank = gmcp.Char.Score.name
myChar = gmcp.Char.Score.name
send("group all")
send("opt autoloot 2")
disableTrigger("SpamSpells")
disableTrigger("AllBots")
disableTrigger("StableBots")
disableTrigger("SpamMapForRepop")
disableTimer("scanner")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You disband your group.$</string>
						<string>^You are not currently following anyone.$</string>
						<string>^You already follow yourself.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Stop Following</name>
					<script>send("cstatus " .. gmcp.Char.Score.name .. " has left " .. myTank .. "'s group.")
send("group all")
myTank = gmcp.Char.Score.name
myChar = gmcp.Char.Score.name
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You stop following (.*).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Intercede</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>intercede</name>
					<script>send("gstatus I will attempt to intercede whenever " .. matches[2] .. " is attacked.")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You will attempt to intercede whenever (\w+) is attacked\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You will no longer attempt to intercede</name>
					<script>send("gstatus I will NOT attempt to intercede " .. matches[2] .. " any more.")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You will no longer attempt to intercede whenever (\w+) is attacked\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>not consented</name>
					<script>send("gtell Since "..matches[2].." does not automatically consent to your actions, the intercede fails.")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Since (\w+) does not automatically consent to your actions, the intercede fails\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Rescue Leading</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>rescue trigs2</name>
					<script>if gmcp.Group.leader == gmcp.Char.Score.name and table.contains(CharsInGroup, matches[2]) then 
	send("rescue " .. matches[2] .. " &amp; stand &amp; rescue " .. matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>counterattacks (\w+)\!</string>
						<string>leaps to attack (\w+)\!</string>
						<string>Almost as if expecting (\w+)\'s attack\, a minotaur bailiff quickly lashes</string>
						<string>The lammasu swoops back\, then dives forward at (\w+) attacking with tremendous speed\.</string>
						<string>^You fail to rescue (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>rescue worked</name>
					<script>send("gstatus " .. matches[2] .. " has been rescued by " .. gmcp.Char.Score.name .. ".")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You rescue (\w+)\!$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>rescue trigs4</name>
					<script>if gmcp.Group.leader == gmcp.Char.Score.name and table.contains(CharsInGroup, matches[4]) then 
	send("rescue " .. matches[4] .. " &amp; stand &amp; rescue " .. matches[4])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A lammasu's claw of justice (\w+) \[(\d+)\] (\w+)'s arm\!  \[ (.*) \]</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>rescue trigs3</name>
					<script>if gmcp.Group.leader == gmcp.Char.Score.name and table.contains(CharsInGroup, matches[3]) then 
	send("rescue " .. matches[3] .. " &amp; stand &amp; rescue " .. matches[3])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>stops attacking (\w+) and leaps to attack (\w+)\.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>ShieldVendor</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bless</name>
					<script>send("stand")
send("cast bless " .. matches[2])
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "blessme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Create Food</name>
					<script>send("stand")	
send("cast create food")
send("cast create food")
send("cast create food")
send("cast create food")
send("cast create food")
send("give all.food " .. matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "feedme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Holy Wrath</name>
					<script>--If you want to be using the matches table after calling expandAlias, 
--you should save it first as local oldmatches = matches before calling 
--expandAlias, since expandAlias will overwrite it after using it again.
local oldmatches = matches[2]

send("stand")
expandAlias("put3 vial.sac.oil")
expandAlias("get3 vial.sac.oil")
send ("cast holy wrath " .. oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "wrathme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Continual Light</name>
					<script>--If you want to be using the matches table after calling expandAlias, 
--you should save it first as local oldmatches = matches before calling 
--expandAlias, since expandAlias will overwrite it after using it again.
local oldmatches = matches[2]

send("stand")
expandAlias("put3 twist.wire")
expandAlias("get3 twist.wire")
send ("cast continual light " .. oldmatches)
send ("cast create light")
send ("give ball.light " .. oldmatches)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "lightme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cure Poison</name>
					<script>oldmatchestwo = matches[2]
send("stand")  
send ("cast cure poison " .. oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "cpme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cure Blind</name>
					<script>oldmatchestwo = matches[2]
send("stand")
send ("cast cure blindness " .. oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "cbme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sanctify</name>
					<script>--If you want to be using the matches table after calling expandAlias, 
--you should save it first as local oldmatches = matches before calling 
--expandAlias, since expandAlias will overwrite it after using it again.
local oldmatchesthree = matches[3]
local oldmatchestwo = matches[2]

if Tank == nil then
    Tank = myChar
end

--if Tank == myChar or oldmatchestwo == Tank then
  send("stand")
	send("remove shield")
	send("wear holy.symbol")
	send("cast sanctify " .. oldmatchesthree)
	send("remove holy.symbol")
	send("wear shield")
  send ("give " .. oldmatchesthree .. " " .. oldmatchestwo)
	
--else
--	send("tell " .. oldmatchestwo .. " I am following " .. Tank .. " at the moment, please check with that person for shields.")
--	send("gtell [ALERT] " .. oldmatchestwo .. " just requested an frostme.")
--end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "sanctifyme (.*)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cure Disease</name>
					<script>oldmatchestwo = matches[2]
send("stand")
expandAlias("put3 rose")
expandAlias("get3 rose")
send ("cast cure disease " .. oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "cdme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Neutralize</name>
					<script>oldmatchestwo = matches[2]
send("stand")
expandAlias("neut " .. oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "neuterme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Revitalize</name>
					<script>oldmatchestwo = matches[2]
send("stand")
expandAlias("put3 troll.flesh")
expandAlias("get3 troll.flesh")
send ("cast revitalize " .. oldmatchestwo)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "revitme"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>List of Commands</name>
					<script>send ("tell " .. matches[2] .. " Make sure we are both intro'd to each other.")
send ("tell " .. matches[2] .. " Make sure we are both in the same room.")
send ("tell " .. matches[2] .. " Tell me 'blessme' for me to leech bless.")
send ("tell " .. matches[2] .. " Tell me 'wrathme' for me to leech holy wrath (must be same alignment).")
send ("tell " .. matches[2] .. " Tell me 'feedme' for me to create some food for you.")
send ("tell " .. matches[2] .. " Tell me 'lightme' for me to leech continual light.")
send ("tell " .. matches[2] .. " Tell me 'sanctifyme &lt;item&gt;' for me to cast sanctify - may need to hand me some alum.")
send ("tell " .. matches[2] .. " Make sure you hand me your item first. After casting, I will hand it back.")
send ("tell " .. matches[2] .. " Tell me 'cpme' for cast cure poison on you.")
send ("tell " .. matches[2] .. " Tell me 'cbme' for cast cure blindness on you.")
send ("tell " .. matches[2] .. " Tell me 'cdme' for cast cure disease on you.")
send ("tell " .. matches[2] .. " Tell me 'neuterme' for cast neutralize on you.")
send ("tell " .. matches[2] .. " Tell me 'revitme' for cast revitalize on you.")
send ("tell " .. matches[2] .. " Feel free to poke me for cures and I'll cast them if I have them prepped.")
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells you: "shields"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>SpamSpells</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>spam lay on hands</name>
					<script>tempTimer(60, [[ 
send("remove kilt")
send("wear kilt")
send("hand")
]])
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You aren't hurt.</string>
						<string>You lay hands on yourself.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>lay on hands Hit 10</name>
					<script>disableTrigger("Spam lay on hands")
disableTimer("Spam lay on hands")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>lay hands just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Spam Create Food</name>
					<script>if Tank == gmcp.Char.Score.name then
	tempTimer( 60, [[send("eat food &amp; drop food &amp; cast create food")]] )
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast create food +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Create Food Hit 10</name>
					<script>disableTrigger("Spam Create Food")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>create food just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Spam Create Light</name>
					<script>send("drop ball.light")
if Tank == gmcp.Char.Score.name then
	tempTimer( 60, [[send("cast create light")]] )
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast create light +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Create Light Hit 10</name>
					<script>disableTrigger("Spam Create Light")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>create light just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Armor Recast</name>
					<script>send("leech armor")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast armor +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Armor Faded</name>
					<script>send("cast armor")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You feel less protected.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Armor Hit 10</name>
					<script>disableTrigger("Armor Recast")
disableTrigger("Armor Faded")
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>armor just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bless Recast</name>
					<script>send("leech bless")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast bless +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bless Faded</name>
					<script>send("stand &amp; cast bless")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You feel less righteous.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bless Hit 10</name>
					<script>disableTrigger("Bless Recast")
disableTrigger("Bless Faded")
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>bless just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>bless disrupted</name>
					<script>tempTimer( 120, [[send("stand &amp; cast bless")]] )</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>&gt;&gt; Your bless casting is disrupted. &lt;&lt;</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Spam Create Water</name>
					<script>send("empty vial.water")
if Tank == gmcp.Char.Score.name then
	tempTimer( 60, [[send("cast create water empty.vial")]] )
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast create water +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Create Water Hit 10</name>
					<script>disableTrigger("Spam Create Water")
expandAlias("load")
send("empty vial, put empty.vial swag")
expandAlias("unload")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>create water just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Holy Wrath Recast</name>
					<script>send("leech holy wrath")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast holy wrath +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Holy Wrath Faded</name>
					<script>send("cast holy wrath")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your wrath subsides.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Holy Wrath Hit 10</name>
					<script>disableTrigger("Holy Wrath Recast")
disableTrigger("Holy Wrath Faded")
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>holy wrath just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Battlemind Faded</name>
					<script>if Tank == gmcp.Char.Score.name then
	send("cast battlemind")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your mind is no longer divinely focused on battle.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Battlemind Not Enough Energy</name>
					<script>if Tank == gmcp.Char.Score.name then
	tempTimer( 120, [[send("cast battlemind")]] )
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You need (\d+) energy points to cast battlemind.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>battlemind just improved to 10</name>
					<script>disableTrigger("Battlemind Faded")

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>battlemind just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Spam Cure Poison</name>
					<script>send("remove black.rose &amp; wear etter,dode")
if Tank == gmcp.Char.Score.name then
	tempTimer( 60, [[send("rem etter,dode &amp; wear black.rose &amp; cast cure poison")]] )
else
	send("rem black.rose &amp; wear etter,dode")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast cure poison +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cure Poison Hit 10</name>
					<script>disableTrigger("Spam Cure Poison")
expandAlias("load")
send("put black.rose swag")
expandAlias("unload")
send("wear owl,ett,dode")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>cure poison just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Neutralize</name>
					<script>--#if (@tank == "Uni")
--{
--  rem vibrant.ruby,ettercap.claw,owl.claw;
--  rem black.lotus;
--  rem shield;
  
--  #wait 60000;
  
--  wear black.lotus;
--  wear unholy;
--  c neutralize;
--}
--{
--  rem black.lotus;
--  wear vibrant.ruby,ettercap.claw,owl.claw;
--  rem unholy;
--  wear shield.fae;
--}</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast neutralize +++</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Neutralize Hit 10</name>
					<script>disableTrigger("Neutralize")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>neutralize just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>marshall mount just improved to 10</name>
					<script>disableTrigger("Marshal Mount Recast")

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>marshall mount just improved to 10</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Marshal Mount Recast</name>
					<script>--You realize it might be a while before you can marshal another mount for aid.
if Tank == gmcp.Char.Score.name then
	tempTimer( 120, [[send("order all w &amp; cast marshal mount")]] )
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>+++ You cast marshal mount +++</string>
						<string>You need 300 energy points to cast marshal mount.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You need a vial of holy water to cast battlemind.</name>
					<script>expandAlias("load4")
send("get vial.holy.water XHOLY")
expandAlias("unload4")
send("cast battlemind")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You need a vial of holy water to cast battlemind.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>You are free to summon aid.</name>
				<script>send("cstatus I'm free to summon aid again.")
send("gstatus I'm free to summon aid again.")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You are free to summon aid.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Version9.1</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
		</TriggerGroup>
	</TriggerPackage>
	<TimerPackage>
		<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>Module Subfolder 1</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<time>00:00:00.000</time>
			<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>Module Timer 1</name>
				<script>echo("Module Timer Test\n")</script>
				<command></command>
				<packageName></packageName>
				<time>00:05:00.000</time>
			</Timer>
		</TimerGroup>
		<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>Module Subfolder 1</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<time>00:00:00.000</time>
			<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>Module Timer 1</name>
				<script>echo("Module Timer Test\n")</script>
				<command></command>
				<packageName></packageName>
				<time>00:05:00.000</time>
			</Timer>
		</TimerGroup>
	</TimerPackage>
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Module Subfolder 1</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Module Sub Sub folder 1 - 1</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Moldule Alias 1</name>
					<script>feedTriggers("Module Test\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^ModuleAlias$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Module Subfolder 1</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Module Sub Sub folder 1 - 1</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Moldule Alias 1</name>
					<script>feedTriggers("Module Test\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^ModuleAlias$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage>
		<ScriptGroup isActive="no" isFolder="yes">
			<name>gmcpPaladin</name>
			<packageName>auto_rally</packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>Paladin_Group_Healing</name>
				<packageName></packageName>
				<script>function Paladin_Group_Healing()
  myDebug = tonumber(getMyConfiguration("debug"))
  myChar = gmcp.Char.Score.name
  myLastGroupHeal = getMyConfiguration("lastgroupheal")
  myGroupHealing = getMyConfiguration("grouphealing")
  myCureDelay = tonumber(getMyConfiguration("curedelay"))
  myGroupHealingMin = tonumber(getMyConfiguration("grouphealingmin"))
  myGroupHealingPercent = tonumber(getMyConfiguration("grouphealingpercent"))
  myEnergy = tonumber(gmcp.Char.Vitals.en)

  
  --AutoHeal[gmcp.Char.Score.name]["LastGroupHeal"] = AutoHeal[gmcp.Char.Score.name]["LastGroupHeal"] or os.time()
  --Is Group Healing enabled?
  if myGroupHealing == "0" then
    return
  end
    
  --Was there already a heal sent within past X seconds?
  if os.time() - myLastGroupHeal &lt; myCureDelay then --default 3 seconds
    return 
  end
  
  if myDebug == "1" then
    cecho("\n&lt;orange&gt;Paladin_Group_Healing() function fired")
  end

  --Get Best Group Healing Spell, taking Unify over Rally if both are known  
  create_tfe_database()
  local mydb = db:get_database("skills")
  local mysql = "select * from abilities where character = '"..gmcp.Char.Score.name.."' and ((ability = 'rally' and level &gt; 0) or (ability = 'unify' and level &gt; 0)) order by ability asc"
  local results = db:fetch_sql(mydb.abilities, mysql)[1]

  setMyConfiguration("grouphealspell", results.ability , "1")
  myGroupHealSpell = getMyConfiguration("grouphealspell")

  SetAveragePaladinCures()
  myGroupCureEnergyCost = tonumber(getMyConfiguration("groupcureenergycost"))
  myGroupAverageCures = tonumber(getMyConfiguration("groupaveragecures"))
  
  --local groupmin = AutoHeal[gmcp.Char.Score.name]["GroupHealingMin"]
  --local grouppercent = AutoHeal[gmcp.Char.Score.name]["GroupHealingPercent"]
  --if vals.hp &lt; groupmin or vals.hp / vals.maxhp &lt; AutoHeal[gmcp.Char.Score.name]["GroupHealingPercent"] / 100 then
  
  if tonumber(results.level) &gt; 0 then
    --local maxmissing = 0
    local target = ''
    local hurt = 0
    for name, vals in pairs(gmcp.Group.members) do
      if vals.hp + myGroupAverageCures &lt; vals.maxhp then --Groupie has Taken damage
        hurt = hurt + 1
        
        --if vals.maxhp - vals.hp &gt; maxmissing then 
          --maxmissing = vals.maxhp - vals.hp
          target = name
          if not table.keys(gmcp.Char.Fighting)[1] and -- NOT In Combat
          gmcp.Char.Status.position ~= "sleeping" and -- NOT sleeping
          myEnergy &gt; 0 and --Have at least 1 energy
          target ~= myChar then  --Is not me
            if myDebug == "1" then
              cecho("\n&lt;orange&gt;*************************************************")
              cecho("\n&lt;orange&gt;*** Paladin_Group_Healing, USING HAND ***")
              cecho("\n&lt;orange&gt;*************************************************")
            end
            send("hand "..target)
            setMyConfiguration("lastgroupheal", os.time() , "1")
          end
        --end
      end
    end
    if hurt &gt;= 3 and myEnergy &gt; myGroupCureEnergyCost then
      if table.keys(gmcp.Char.Fighting)[1] then -- In Combat
        if myDebug == "1" then
          cecho("\n&lt;orange&gt;*************************************************")
          cecho("\n&lt;orange&gt;*** Paladin_Group_Healing, CASTING HEAL***")
          cecho("\n&lt;orange&gt;*************************************************")
        end
        send("cast "..myGroupHealSpell)
        setMyConfiguration("lastgroupheal", os.time() , "1")
      else
        if myDebug == "1" then
          cecho("\n&lt;orange&gt;Paladin_Group_Healing() - not in combat")
        end
      end
    else
      if myDebug == "1" then
        cecho("\n&lt;orange&gt;Paladin_Group_Healing() - need 3 or more to be hurt to fire")
      end
    end
  end
end</script>
				<eventHandlerList>
					<string>gmcp.Group</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Paladin_Single_Healing</name>
				<packageName></packageName>
				<script>function Paladin_Single_Healing()
  myDebug = tonumber(getMyConfiguration("debug"))
  myChar = gmcp.Char.Score.name
  myLastSingleTargetHeal = getMyConfiguration("lastsingletargetheal")
  mySingleTargetHealing = getMyConfiguration("singletargethealing")
  mySingleTargetHealingActive = getMyConfiguration("singletargethealingactive")
  myCureDelay = tonumber(getMyConfiguration("curedelay"))
  mySingleTarget = getMyConfiguration("singletarget")
  mySingleTargetDamageBeforeHealing = tonumber(getMyConfiguration("singletargetdamagebeforehealing"))
  myEnergy = tonumber(gmcp.Char.Vitals.en)

  --Is Single Target Healing enabled?
  if mySingleTargetHealing == "0" then
    return
  end
  
  --Was there already a heal sent within past X seconds?  
  if os.time() - myLastSingleTargetHeal &lt; myCureDelay then
    return 
  end
  
  if myDebug == "1" then
    cecho("\n&lt;orange&gt;Paladin_Single_Healing() function fired")
  end
  
  --Get Best Target Healing Spell "mending", "binding", "recovery", "redintegrate"
  create_tfe_database()
  
  local mydb = db:get_database("skills")
  local mysql = "select * from abilities where character = '"..myChar.."' and ((ability = 'mending' and level &gt; 0) or (ability = 'binding' and level &gt; 0) or (ability = 'recovery' and level &gt; 0) or (ability = 'redintegrate' and level &gt; 0)) order by (case when ability = 'mending' then 1 when ability = 'binding' then 2 when ability = 'recovery' then 3 when ability = 'redintegrate' then 4 end) desc"
  local results = db:fetch_sql(mydb.abilities, mysql)[1]
  
  setMyConfiguration("singletargethealspell", results.ability , "1")
  mySingleTargetHealSpell = getMyConfiguration("singletargethealspell")
  SetAveragePaladinCures()
  mySingleAverageCures = getMyConfiguration("singleaveragecures")
  mySingleCureEnergyCost = getMyConfiguration("singlecureenergycost")
  
  if tonumber(results.level) &gt; 0 then
    local target = mySingleTarget
    for name, vals in pairs(gmcp.Group.members) do
      --if vals.hp + mySingleAverageCures &lt; vals.maxhp - mySingleTargetDamageBeforeHealing
      if vals.hp &lt; vals.maxhp - mySingleTargetDamageBeforeHealing
        and name == target then
        
        if myEnergy &gt; mySingleCureEnergyCost then
          if table.keys(gmcp.Char.Fighting)[1] and mySingleTargetHealingActive == "1" then -- In Combat
            if myDebug == "1" then
              cecho("\n&lt;orange&gt;**************************************************")
              cecho("\n&lt;orange&gt;*** Paladin_Single_Healing, CASTING HEAL***")
              cecho("\n&lt;orange&gt;**************************************************")
            end
            send("cast "..mySingleTargetHealSpell.." "..target)
            setMyConfiguration("lastsingletargetheal", os.time() , "1")
          else
            if myDebug == "1" then
              cecho("\n&lt;orange&gt;**************************************************")
              cecho("\n&lt;orange&gt;*** Paladin_Single_Healing, USING HAND***")
              cecho("\n&lt;orange&gt;**************************************************")
            end
            if gmcp.Char.Status.position ~= "sleeping" and not table.keys(gmcp.Char.Fighting)[1] then
              send("hand "..target)
            end
            setMyConfiguration("lastsingletargetheal", os.time() , "1")
          end
        end
        
      end
    end
  end
end</script>
				<eventHandlerList>
					<string>gmcp.Group</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Paladin_Self_Healing</name>
				<packageName></packageName>
				<script>function Paladin_Self_Healing()
  myDebug = tonumber(getMyConfiguration("debug"))
  
  if myDebug == "1" then
    cecho("\n&lt;orange&gt;Paladin_Self_Healing() function fired")
  end
  
  if myDebug == "1" then
    cecho("\n&lt;orange&gt;Paladin_Self_Healing() setting local variables")
  end
  
  myChar = gmcp.Char.Score.name
  myLastSelfHeal = getMyConfiguration("lastselfheal") 
  myCureDelay = tonumber(getMyConfiguration("curedelay"))
  --myHealPrepTo = tonumber(getMyConfiguration("healprepto"))
  --myHealWithSpell = getMyConfiguration("healwithspell")
  --myRemainingCures = tonumber(gcmpPrepCount(myHealWithSpell))
  myEnergy = tonumber(gmcp.Char.Vitals.en)
  --myMaxEnergy = tonumber(gmcp.Char.Vitals.maxen)
  --myCureEnergyCost = tonumber(getMyConfiguration("cureenergycost"))
  myHitPoints = tonumber(gmcp.Char.Vitals.hp)
  myMaxHitPoints = tonumber(gmcp.Char.Vitals.maxhp)
  mySelfDamageTaken = myMaxHitPoints - myHitPoints
  mySelfDamageBeforeHeals = tonumber(getMyConfiguration("selfdamagebeforeheals"))

  --AutoHeal[gmcp.Char.Score.name]["LastSelfHeal"] = AutoHeal[gmcp.Char.Score.name]["LastSelfHeal"] or os.time()
  --Was there already a heal sent within past X seconds? 
  
  if myDebug == "1" then
    cecho("\n&lt;orange&gt;Paladin_Self_Healing() - checking last heal time")
  end
   
  if os.time() - myLastSelfHeal &lt; myCureDelay then
    return 
  end
  
  if myDebug == "1" then
    cecho("\n&lt;orange&gt;Paladin_Self_Healing() - checking hit points")
  end
  
  if myHitPoints == myMaxHitPoints then
    if myDebug == "1" then
      cecho("\n&lt;orange&gt;Paladin_Self_Healing() - hit points at maximum, exiting function")
    end
    return
  end

  if myDebug == "1" then
    cecho("\n&lt;orange&gt;Paladin_Self_Healing() - determining which heal spell to use")
  end
  
  create_tfe_database()
  local mydb = db:get_database("skills")
  local mysql = "select * from abilities where character = '"..myChar.."' and ((ability = 'mending' and level &gt; 0) or (ability = 'binding' and level &gt; 0) or (ability = 'recovery' and level &gt; 0) or (ability = 'redintegrate' and level &gt; 0)) order by (case when ability = 'mending' then 1 when ability = 'binding' then 2 when ability = 'recovery' then 3 when ability = 'redintegrate' then 4 end) desc"
  local results = db:fetch_sql(mydb.abilities, mysql)[1]
  setMyConfiguration("selfhealspell", results.ability , "1")
  mySelfHealSpell = getMyConfiguration("selfhealspell")
	SetAveragePaladinCures()

  
  if tonumber(results.level) &gt; 0 then
    if myHitPoints &lt; myMaxHitPoints - mySelfDamageBeforeHeals then
      if table.keys(gmcp.Char.Fighting)[1] then -- In Combat
        if myDebug == "1" then
          cecho("\n&lt;orange&gt;************************************************")
          cecho("\n&lt;orange&gt;*** Paladin_Self_Healing, CASTING HEAL***")
          cecho("\n&lt;orange&gt;************************************************")
        end
        send("cast " .. mySelfHealSpell)

        setMyConfiguration("lastselfheal", os.time() , "1")
      else
        if myDebug == "1" then
          cecho("\n&lt;orange&gt;************************************************")
          cecho("\n&lt;orange&gt;*** Paladin_Self_Healing, USING HAND  ***")
          cecho("\n&lt;orange&gt;************************************************")
        end
        if myEnergy &gt; 0 and gmcp.Char.Status.position ~= "sleeping" then
          send("hand")
        else
          if myDebug == "1" and myEnergy &gt; 0 then
            cecho("\n&lt;orange&gt;*** Paladin_Self_Healing, NOT ENOUGH ENERGY***")
          end
          if myDebug == "1" and gmcp.Char.Status.position ~= "sleeping" then
            cecho("\n&lt;orange&gt;*** Paladin_Self_Healing, I AM SLEEPING***")
          end
        end

        setMyConfiguration("lastselfheal", os.time() , "1")
      end
    end
  end
  
  if myDebug == "1" then
    cecho("\n&lt;orange&gt;Paladin_Self_Healing() - finished")
  end
  
end</script>
				<eventHandlerList>
					<string>gmcp.Char.Vitals</string>
					<string>gmcp.Group</string>
				</eventHandlerList>
			</Script>
		</ScriptGroup>
		<Script isActive="yes" isFolder="no">
			<name>initializePaladinCureInfo</name>
			<packageName></packageName>
			<script>function initializePaladinCureInfo()
  cecho("&lt;orange&gt;\nInitializePaladinCureInfo() - Begin")
  create_tfe_database()
  --Load Database to local variable
  local mydb = db:get_database("skills")
  db:delete(mydb.PaladinCureInfo, true)
  db:add(mydb.PaladinCureInfo, {curespell="mending", curetype="single", averagevalue=23, costvalue=25})
  db:add(mydb.PaladinCureInfo, {curespell="binding", curetype="single", averagevalue=42, costvalue=40})
  db:add(mydb.PaladinCureInfo, {curespell="recovery", curetype="single", averagevalue=120, costvalue=80})
  db:add(mydb.PaladinCureInfo, {curespell="redintegrate", curetype="single", averagevalue=225, costvalue=110})
  db:add(mydb.PaladinCureInfo, {curespell="unify", curetype="group", averagevalue=75, costvalue=60})
  db:add(mydb.PaladinCureInfo, {curespell="rally", curetype="group", averagevalue=155, costvalue=95})
  cecho("&lt;orange&gt;\nInitializePaladinCureInfo() - End")
  
end</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>LoadPaladin</name>
			<packageName></packageName>
			<script>function LoadPaladin()

  cecho("\n&lt;orange&gt;LoadPaladin() - function fired")

  PopulateMyVariablesCommands()
  initializePaladinCureInfo()
  SetAveragePaladinCures()

  cecho("\n&lt;orange&gt;LoadPaladin() - function finished")
  
end</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>IsValidPaladinCureSpell</name>
			<packageName></packageName>
			<script>-------------------------------------------------
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function IsValidPaladinCureSpell(spell)

  --Create Database if not exists, otherwise update table schema
  create_tfe_database()
  --Load Database to local variable
  local mydb = db:get_database("skills")  
  
  local mysql = "select * from PaladinCureInfo where curespell = '"..spell.."' limit 1"
  local results = db:fetch_sql(mydb.PaladinCureInfo, mysql)
  
  if next(results) then
    return true
  else
    return false
  end
  
end
</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>SetAveragePaladinCures</name>
			<packageName></packageName>
			<script>-------------------------------------------------
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function SetAveragePaladinCures()
  
  mySingleTargetHealSpell = getMyConfiguration("singletargethealspell")
  
  --Create Database if not exists, otherwise update table schema
  create_tfe_database()
  --Load Database to local variable
  local mydb = db:get_database("skills")  
  
  local mysql = "select * from PaladinCureInfo where curespell = '"..mySingleTargetHealSpell.."' and curetype = 'single' limit 1"
  local results = db:fetch_sql(mydb.PaladinCureInfo, mysql)
  
  if next(results) then
    setMyConfiguration("singleaveragecures", results[1].averagevalue, "1") 
    setMyConfiguration("singlecureenergycost", results[1].costvalue, "1") 
  end
    
  myGroupHealSpell = getMyConfiguration("grouphealspell")
  
  local mysql = "select * from PaladinCureInfo where curespell = '"..myGroupHealSpell.."' and curetype = 'group' limit 1"
  local results = db:fetch_sql(mydb.PaladinCureInfo, mysql)
  
  if next(results) then
    setMyConfiguration("groupaveragecures", results[1].averagevalue, "1") 
    setMyConfiguration("groupcureenergycost", results[1].costvalue, "1") 
  end

end  	
</script>
			<eventHandlerList />
		</Script>
	</ScriptPackage>
	<KeyPackage />
	<HelpPackage>
		<helpURL></helpURL>
	</HelpPackage>
</MudletPackage>
